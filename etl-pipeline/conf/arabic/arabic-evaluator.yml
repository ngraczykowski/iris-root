# TODO when enabling new arabic we have to remove this preprocessing from advname-indv.yml
#
# s/o = son of; d/o = daughter of; a/l = malaysian son of; a/p = malaysian daughter of
#- regex: '^(?<name1>.+?)\s+(d\/o|s\/o|a\/l|a\/p)\s+(?<name2>.+?)$'
#  caseInsensitive: true
#  groups: [ name1, name2 ]

name.evaluator.arabic:
  features:
    genderMismatchEnabled: true
    ancestorsOrderMismatchEnabled: true
    skipNamesWithComma: false
    decisionMatrixFile: "arabic/decision/match-ratio-to-decision-matrix.csv"
  genderTags:
    female: [ "HARAM", "HRAM", "HURMA", "HURMAT", "HRMT", "W/O", "W O", "HJH", "IBNAT", "BINT", "BINTI",
              "BINTE", "BENT", "BTE", "BN", "BNT", "BT", "D/O", "A/P" ]
    male: [ "IBN", "BIN", "BEN", "OULD", "WULD", "WLD", "IBIN", "BYN", "S/O", "A/L" ]

  transformers:
    sanitize:
      - transformationName: "To upper case"
        transformationType: UPPER_CASE

      - transformationName: "Remove comma"
        transformationType: REPLACE_CHARACTERS
        patterns: [ " <\\," ]

      - transformationName: "Remove apostrophes"
        transformationType: REPLACE_CHARACTERS
        patterns: [ "<['â€™]" ]

      - transformationName: "Replace underscore, dots, and hyphen with spaces"
        transformationType: REPLACE_CHARACTERS
        patterns: [ " <[ ]*[_\\.-]+[ ]*", ' <\"' ]

      - transformationName: "Remove malaysian honorary titles"
        transformationType: IGNORE_WORDS
        configFilePaths: [ "arabic/dictionaries/malay-titles.txt" ]

    # After normalization highest decision returned is STRONG_MATCH
    normalize:

      - transformationName: "Remove pilgrimage ornaments"
        transformationType: IGNORE_WORDS
        configFilePaths: [ "arabic/dictionaries/pilgrimage-ornaments.txt" ]

      - transformationName: "Force normalization of exceptional names"
        transformationType: REPLACE_WORDS
        configFilePaths: [ "arabic/dictionaries/exceptional-names.txt" ]

      - transformationName: "Normalize ABU prefix"
        transformationType: REPLACE_WORDS
        patterns: [ "$1-$3<(ABU)(L)?[- ]?(\\w+)", "ABU<ABUL;AB;BU;BOU" ]

      - transformationName: "Split by common tokens: stage1"
        transformationType: SPLIT_BY_TOKENS
        configFilePaths: [ "arabic/dictionaries/tokens.txt" ]

      - transformationName: "Remove honorary titles"
        transformationType: IGNORE_WORDS
        configFilePaths: [ "arabic/dictionaries/honorary-titles.txt" ]

      - transformationName: "Remove known noise"
        transformationType: REPLACE_CHARACTERS
        patterns: [ "<EXT PK" ]

      - transformationName: "Concatenate ULAH with previous name"
        transformationType: REPLACE_WORDS
        patterns: [ "$1$2<([A-Z]+) (ULL?AH)" ]

      ################################### Phonetic normalization ###################################
      # Phonetic/spelling variations may cause names to fit into dictionary of known tokens hence be splitted into separate tokens
      - transformationName: "Remove multiplicated consonants"
        transformationType: REPLACE_CHARACTERS
        patterns: [ "$1<([^EUIOAY])\\1+" ]

      - transformationName: "Replace multiplicated vovels"
        transformationType: REPLACE_CHARACTERS
        patterns: [ "I<(E)\\1+", "U<(O)\\1+", "A<(A)\\1+", "Y<(Y)\\1+", "U<(U)\\1+" ]

      - transformationName: "Replace phonetic"
        transformationType: REPLACE_CHARACTERS
        patterns: [ "TR<THR", "K<KH\b", "A<AH\b", "T<TH\b", "KA<KHA\b" ]

      ############################ SPLIT phonetically transformed names ############################
      # Repeated after attempt to fix spelling variants
      - transformationName: "Split by common tokens: stage2"
        transformationType: SPLIT_BY_TOKENS
        configFilePaths: [ "arabic/dictionaries/tokens.txt" ]

      ################################### NORMALIZE SPELLING VARIANTS OF FAMILY RELATIONS ##########
      # NOTE: If ICU transformer is ran before this transformer special characters like '/' will be lost
      - transformationName: "Normalize SON OF prefix"
        transformationType: REPLACE_WORDS
        patterns: [ "SONOF<IBN;BIN;BEN;OULD;WULD;WLD;IBIN;BYN;S/O;A/L" ]

      - transformationName: "Normalize DAUGHTER OF prefix"
        transformationType: REPLACE_WORDS
        patterns: [ "DAUGHTEROF<IBNAT;BINT;BINTI;BINTE;BENT;BTE;BN;BNT;BT;D/O;A/P" ]

      # Force split makes sense only for WIFEOF because those prefixes don't conflict with other like with BIN vs BINTI
      - transformationName: "Split WIFE OF from the rest of the word"
        transformationType: FORCE_SPLIT
        patterns: [ "HARAM", "HRAM", "HURMAT", "HURMA", "HRMT" ]

      - transformationName: "Normalize WIFE OF prefix"
        transformationType: REPLACE_WORDS
        patterns: [ "WIFEOF<HARAM;HRAM;HURMA;HURMAT;HRMT;W/O;W O" ]

      - transformationName: "Normalize synonyms"
        transformationType: REPLACE_WORDS
        configFilePaths: [ "arabic/dictionaries/synonyms.txt" ]

      ################################### NORMALIZE NAMES OF GOD ###################################

      # NOTE: At this point all names have some sort of spelling/normalization already done.
      # - No double LL
      # This part is needed to normalize names like "ABDALMAALIK" where we first split name into "ABDAl MAALIK"
      # and then normalize both parts separately

      # Normalize variants of servant (e.g. ABDALMAALIK -> ABDAL MAALIK -> ABDUL MAALIK)
      - transformationName: "Normalize servant synonyms"
        transformationType: REPLACE_WORDS
        patterns: [ "ABDUL<ABDEL;ABDOL;ABDOOL;ABDHUL;ABDAL;ABDL;ABDIL;ABDAR;ABDER;ABDUR;ABDUS;ABDOR;ABDOUL;ABDUAL;ABDUEL;ABDUER;ABDUALL;ABD UR;ABD UL;ABD AL;ABD EL;ABD;ABD'L;ABDOU" ]

      # Normalize variants of names of god (e.g. ABDALMAALIK -> ABDAL MAALIK -> ABDUL MAALIK -> ABDUL MALIK)
      - transformationName: "Normalize NAMES OF GOD synonyms"
        transformationType: REPLACE_WORDS
        configFilePaths: [ "arabic/dictionaries/names-of-god.txt" ]

      # For names that were originally variants of ABDULLAH previous step splitted them into ABDUL ALAH which is incorrect. This step join them back to base variant
      - transformationName: "Concatenate SERVANT OF with following name"
        transformationType: REPLACE_WORDS
        patterns: [ "ABDULAH<(ABDUL) (ALAH)", "$1-$2<(ABDUL) ([A-Z]+)", "ABDULAH<ABD-ALLAH",
                    "ABDUL-SALAM<ABDUSALAM", "ABDUL-SAMAD<ABDUSAMAD", "ABDUL-SATAR<ABDUSATAR",
                    "ABDUL-NASIR<ABDUNNASIR" ]

      # Needs to be run after NORMALIZE_SYNONYMS because separate tokens might be normalized to base variants
      - transformationName: "Normalize DIN suffix"
        transformationType: REPLACE_WORDS
        patterns: [ "$1$2$3<(\\w+)[ ]?(UD?)?[ ]?(DIN)" ]

      - transformationName: "Remove AL/EL prefix"
        transformationType: IGNORE_WORDS
        patterns: [ "AL", "EL" ]

      - transformationName: "Remove slashes"
        transformationType: REPLACE_CHARACTERS
        patterns: [ " <\\\\", " </" ]
