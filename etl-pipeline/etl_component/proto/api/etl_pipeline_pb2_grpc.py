# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import etl_pipeline_pb2 as etl__pipeline__pb2
import grpc


class EtlPipelineServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RunEtl = channel.unary_unary(
            "/silenteight.datascience.etlpipeline.v1.api.EtlPipelineService/RunEtl",
            request_serializer=etl__pipeline__pb2.RunEtlRequest.SerializeToString,
            response_deserializer=etl__pipeline__pb2.RunEtlResponse.FromString,
        )


class EtlPipelineServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RunEtl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_EtlPipelineServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "RunEtl": grpc.unary_unary_rpc_method_handler(
            servicer.RunEtl,
            request_deserializer=etl__pipeline__pb2.RunEtlRequest.FromString,
            response_serializer=etl__pipeline__pb2.RunEtlResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "silenteight.datascience.etlpipeline.v1.api.EtlPipelineService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class EtlPipelineService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RunEtl(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/silenteight.datascience.etlpipeline.v1.api.EtlPipelineService/RunEtl",
            etl__pipeline__pb2.RunEtlRequest.SerializeToString,
            etl__pipeline__pb2.RunEtlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
