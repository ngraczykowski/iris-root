syntax = "proto3";

package silenteight.agent.geo.v1.api;

import "google/protobuf/any.proto";
import "google/api/field_behavior.proto";

option java_package = "com.silenteight.proto.agent.geo.v1.api";
option java_outer_classname = "GeoCommonProto";
option java_multiple_files = true;

message Location {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  LocationType type = 2 [(google.api.field_behavior) = REQUIRED];
  uint32 id = 3 [(google.api.field_behavior) = REQUIRED];
  string code = 4 [(google.api.field_behavior) = REQUIRED];
  // A reference id to the parent location.
  uint32 parent_id = 5 [(google.api.field_behavior) = OPTIONAL];
  google.protobuf.Any details = 6 [(google.api.field_behavior) = OPTIONAL];
  // Whether location was provided explicitly, not derived
  bool explicitly_provided = 7 [(google.api.field_behavior) = REQUIRED];
  // The list of locations (cities or states) the location was derived from
  repeated uint32 derived_from = 10 [(google.api.field_behavior) = OPTIONAL];

  reserved 8, 9;
}

enum LocationType {
    // Default value if the type isn't specified.
    LOCATION_TYPE_UNSPECIFIED = 0;
    // A state or equivalent level location.
    STATE = 1;
    // A country level location.
    COUNTRY = 2;
    // A city or equivalent level location.
    CITY = 3;
    // A ZIP code level location.
    ZIP_CODE = 4;
    // A widely known region or administrative area
    REGION = 5;
    // A street address level location.
    // STREET_ADDRESS = 6;
    // A county or equivalent level location.
    // SUB_ADMINISTRATIVE_AREA = 7;
    // A sublocality is a subdivision of a locality, f.e a city borough, ward, or arrondissement.
    // SUB_LOCALITY = 8;
}

message GeoComparerReason {
  repeated GeoComparerResult geo_compare_results = 1 [(google.api.field_behavior) = REQUIRED];

  message GeoComparerResult {
    // country, city, state, etc...
    LocationType type = 1 [(google.api.field_behavior) = REQUIRED];
    // original input
    string alerted_party_value = 2 [(google.api.field_behavior) = REQUIRED];
    // original input
    string watchlist_party_value = 3 [(google.api.field_behavior) = REQUIRED];
    // do AP value and WP value match?
    MatchType match_type = 4 [(google.api.field_behavior) = REQUIRED];

    string error_message = 5 [(google.api.field_behavior) = OPTIONAL];
    // Distance in kilometers, present only when type is city, otherwise empty.
    int32 distance = 6 [(google.api.field_behavior) = OPTIONAL];
  }

  enum MatchType {
    MATCH = 0;
    NO_MATCH = 1;
    WEAK_MATCH = 2;
  }
}

message IdentifiedLocation {
  string original_input = 1 [(google.api.field_behavior) = REQUIRED];
  // input identified as...
  Location location = 2 [(google.api.field_behavior) = REQUIRED];
}

message Coordinates {
  double latitude = 1 [(google.api.field_behavior) = OPTIONAL];
  double longitude = 2 [(google.api.field_behavior) = OPTIONAL];
}
