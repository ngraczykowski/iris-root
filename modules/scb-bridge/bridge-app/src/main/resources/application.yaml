server:
  port: 24220
  servlet.context-path: /rest/${spring.application.name}

grpc:
  client:
    registration.address: static://localhost:24806
    universal-data-source.address: static://localhost:24805
    recommendation.address: static://localhost:24806
    retry:
      delay-in-milliseconds: 2500
      multiplier: 2
      max-attempts: 3
    GLOBAL:
      negotiation-type: PLAINTEXT
  server:
    port: 24221

management:
  endpoint:
    health.show-details: always
  endpoints:
    web:
      base-path: /management
      exposure:
        include: [ "health", "info", "liquibase", "metrics", "prometheus", "loggers" ]
    loggers:
      sensitive: false
  metrics:
    distribution:
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
      percentiles-histogram:
        http.server.requests: true
    tags:
      application: ${spring.application.name}

spring:
  webflux:
    base-path: /rest/${spring.application.name}
  cloud:
    consul:
      enabled: false
      discovery:
        enabled: true
        register: false
        register-health-check: false
      service-registry:
        auto-registration:
          enabled: false

  rabbitmq:
    port: 24130
    username: scb
    password: scb
    listener:
      simple:
        max-concurrency: 10
        prefetch: 500
        acknowledge-mode: auto
  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: never

  datasource:
    url: jdbc:postgresql://${silenteight.scb-bridge.db.host}:${silenteight.scb-bridge.db.port}/${silenteight.scb-bridge.db.name}?currentSchema=${silenteight.scb-bridge.db.schema:public}
    username: ${silenteight.scb-bridge.db.username}
    password: ${silenteight.scb-bridge.db.password}
    initialization-mode: never

  liquibase:
    default-schema: ${silenteight.scb-bridge.db.schema:public}

  jpa:
    database: POSTGRESQL
    show-sql: false
    open-in-view: false

    hibernate:
      ddl-auto: none
      use-new-id-generator-mappings: true

    properties:
      hibernate:
        jdbc:
          fetch_size: ${serp.scb.bridge.config.chunk-size}
          batch_size: ${serp.scb.bridge.config.chunk-size}
        order_inserts: true
        order_updates: true

  quartz:
    properties:
      org:
        quartz:
          scheduler:
            instanceName: ScbBridgeScheduler

    jdbc:
      initialize-schema: never
    job-store-type: memory

  external:
    datasource:
      password: ${serp.gns.db.password}
      username: ${serp.gns.db.user}
      url: ${serp.gns.db.url}
      hikari:
        auto-commit: ${serp.gns.db.auto-commit}
        isolate-internal-queries: ${serp.gns.db.isolate-internal-queries}
        maximum-pool-size: ${serp.gns.db.connections.max:${serp.db.connections.max}}
        connection-init-sql: ${serp.gns.db.connection-init-query}
        minimum-idle: ${serp.gns.db.connections.min:${serp.db.connections.min}}
        pool-name: GNS-Pool

      hikari-on-demand:
        minimum-idle: ${serp.gns.db.connections.on-demand.min:${serp.db.connections.min}}
        isolate-internal-queries: ${serp.gns.db.isolate-internal-queries}
        connection-init-sql: ${serp.gns.db.connection-init-query}
        auto-commit: ${serp.gns.db.auto-commit}
        maximum-pool-size: ${serp.gns.db.connections.on-demand.max:${serp.db.connections.max}}
        pool-name: GNS-On-Demand-Pool

silenteight:
  scb-bridge:
    working-mode: NORMAL
    db:
      host: localhost
      port: 24291
      schema: public
      name: scb_bridge
      username: scb
      password: scb
    cbs:
      attach-qco-fields-to-recom: false
    learning:
      alert.enabled: false
      ecm.enabled: false
    solving:
      alert-processor.enabled: false
    grpc:
      recommendation:
        recommendation-deadline: 1m
      registration:
        registration-deadline: 1m
      universal-data-source:
        uds-deadline: 1m
    categories:
      - name: categories/apType
        allowed-values:
          - I
          - C
          - UNSPECIFIED
        display-name: Alerted Party Type
        category-type: ENUMERATED
      - name: categories/isDeny
        allowed-values:
          - 'YES'
          - 'NO'
        display-name: IsDeny
        category-type: ENUMERATED

  qco:
    enabled: false

serp:
  # GNS DB Configuration
  gns:
    db:
      connection-init-query: SELECT 1 FROM DUAL
      auto-commit: false
      url: jdbc:oracle:thin:@${serp.gns.db.host}:${serp.gns.db.port}/${serp.gns.db.service.name}
      isolate-internal-queries: true
      connections:
        min: 1
        max: 30
        on-demand:
          max: 20
          min: 1

  # General Settings
  scb:
    gnsrt:
      recommendation:
        scheduler-thread-cap: 20
        scheduler-queued-task-cap: 100
    bridge:
      config:
        time-zone: Asia/Hong_Kong
        chunk-size: 250
        query-timeout: 300
      alert:
        cleaner:
          offset: 1D
          cron-expression: 0 0 0 * * ?
        reader:
          solvedAlertsProcessingEnabled: false
      gns:
        solution:
          states:
            ANALYST_NO_SOLUTION: [ 0 ]
      cbs:
        config:
          ack-function-name: CBS_INTERFACE_PKG.F_CBS_S8_LOG_ACK
          recom-function-name: CBS_INTERFACE_PKG.F_CBS_S8_LOG_RECOM
          recom-with-qco-function-name: CBS_INTERFACE_PKG_V4.F_CBS_S8_LOG_RECOM
          source-application-values:
            - alert-level: S8ALERT
            - watchlist-leve: S8HIT
        recommendation:
          recommendation-values:
            ACTION_INVESTIGATE: Manual Investigation
            ACTION_INVESTIGATE_HINTED_FALSE_POSITIVE: Manual Investigation
            ACTION_INVESTIGATE_PARTIALLY_FALSE_POSITIVE: Manual Investigation
            ACTION_INVESTIGATE_HINTED_TRUE_POSITIVE: Manual Investigation
            ACTION_FALSE_POSITIVE: False Positive
            ACTION_POTENTIAL_TRUE_POSITIVE: Potential True Positive

# AMQP
amqp:
  feeding:
    outgoing:
      match-feature-input-set-fed:
        exchange-name: core-bridge.match-feature-input-set-fed-exchange

  output-recommendation:
    number-of-retries-dead-messages: 2
    incoming:
      notify-batch-completed:
        solving:
          exchange-name: core-bridge.notify-batch-completed-exchange
          queue-name: scb-bridge.notify-batch-completed-queue
          dead-letter-queue-name: scb-bridge.notify-batch-completed.dlq
          dead-letter-queue-time-to-live-in-milliseconds: 30000
          dead-letter-exchange-name: scb-bridge.notify-batch-completed.dlx
          batch-routing-key: solving
      batch-error:
        solving:
          exchange-name: core-bridge.notify-batch-error-exchange
          queue-name: scb-bridge.notify-batch-error-queue
          dead-letter-queue-name: scb-bridge.notify-batch-error.dlq
          dead-letter-queue-time-to-live-in-milliseconds: 30000
          dead-letter-exchange-name: scb-bridge.notify-batch-error.dlx
          batch-routing-key: solving
    outgoing:
      recommendation-delivered:
        exchange-name: core-bridge.recommendation-delivered-exchange

  reports:
    outgoing:
      exchange-name: bridge.command
      routing-key: command.index-request.production
