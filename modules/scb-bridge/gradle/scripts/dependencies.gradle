ext {
  libraries = [:]

  //***********************************
  // Silent Eight
  //***********************************

  // Note: Setting here versions with "BUILD.+" causes docker-compose to fail to find images
  // Docker does not understand gradle dependency versions convention with wildcard!
  silenteightAuditBsVersion = "1.0.0"
  silenteightCommonsVersion = "2.0.0"
  silenteightSepBaseVersion = "1.10.1"
  silenteightSolversVersion = "2.7.0"
  silenteightSensWebappVersion = "1.28.3"
  silenteightSepFrontendVersion = "1.27.0"
  coreBridgeRegistrationApiVersion = '1.12.0'

  springBootVersion = '2.5.10'
  springCloudVersion = '3.0.1'
  springVersion = '5.3.16'
  springRetryVersion = '1.3.1'
  springBatchCore = '4.3.4'
  springIntegrationVersion = '5.5.9'
  springRabbitVersion = '2.3.6'
  serpProtocolVersion = "0.37.0"

  reactorCoreVersion = '3.4.15'
  reactorRabbitmqVersion = '1.5.4'
  reactorGrpcStubVersion = '1.0.0'
  hibernateEnversVersion = '5.6.5.Final'
  ojdbcVersion = '12.2.0.1'
  postgresqlVersion = '42.2.24'
  aspectjrt = '1.9.8'
  grpcSpringBootStarterVersion = '2.13.1.RELEASE'
  grpcNettyShadedVersion = '1.44.1'
  bouncycastleVersion = '1.70'
  byteBuddyVersion = '1.12.8'
  commonsCollectionsVersion = '4.4'
  commonCompressVersion = '1.21'
  commomnsIoVersion = '2.11.0'
  guavaVersion = '31.1-jre'
  googleProtobufVersion = '3.19.4'

  groovyVersion = '3.0.9'
  junitPlatformCommonsVersion = '1.8.1'
  spockSpringVersion = '2.1-groovy-3.0'
}

// @formatter:off

// Silent Eight
libraries.silenteight_commons_core = [group: 'com.silenteight.commons', name: 'silenteight-commons-core', version: silenteightCommonsVersion]
libraries.silenteight_sep_base_aspects = [group: 'com.silenteight.sep.base', name: 'sep-base-aspects', version: silenteightSepBaseVersion]
libraries.silenteight_sep_base_common = [group: 'com.silenteight.sep.base', name: 'sep-base-common', version: silenteightSepBaseVersion]
libraries.silenteight_sep_base_testing = [group: 'com.silenteight.sep.base', name: 'sep-base-testing', version: silenteightSepBaseVersion]
libraries.silenteight_serp_protocol_base = [group: 'com.silenteight.serp.protocol', name: 'serp-protocol-base', version: serpProtocolVersion]
libraries.silenteight_serp_protocol_scb = [group: 'com.silenteight.serp.protocol', name: 'serp-protocol-scb', version: serpProtocolVersion]
libraries.registration_api_library = [group: 'com.silenteight.registration.api.library', name: 'registration-lib', version: coreBridgeRegistrationApiVersion]
libraries.registration_api_proto = [group: 'com.silenteight.registration.api.library', name: 'registration-internal-protos', version: coreBridgeRegistrationApiVersion]

// Spring
libraries.spring_aspects = [group: 'org.springframework', name: 'spring-aspects', version: springVersion]
libraries.spring_boot = [group: 'org.springframework.boot', name: 'spring-boot', version: springBootVersion]
libraries.spring_boot_actuator = [group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootVersion]
libraries.spring_boot_configuration_processor = [group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: springBootVersion]
libraries.spring_boot_starter_undertow = [group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version: springBootVersion]
libraries.spring_boot_starter_validation = [group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: springBootVersion]
libraries.spring_boot_starter_web = [group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion]
libraries.spring_data_jdbc = [group: 'org.springframework.boot', name: 'spring-boot-starter-data-jdbc', version: springBootVersion]
libraries.spring_boot_starter_amqp = [group: 'org.springframework.boot', name: 'spring-boot-starter-amqp', version: springBootVersion]
libraries.spring_boot_starter_jpa = [group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion]
libraries.spring_retry = [group: 'org.springframework.retry', name: 'spring-retry', version: springRetryVersion]
libraries.spring_amqp = [group: 'org.springframework.amqp', name: 'spring-amqp', version: springRabbitVersion]
libraries.spring_rabbit = [group: 'org.springframework.amqp', name: 'spring-rabbit', version: springRabbitVersion]
libraries.spring_boot_starter_quartz = [group: 'org.springframework.boot', name: 'spring-boot-starter-quartz', version:  springBootVersion]
libraries.spring_batch_core = [group: 'org.springframework.batch', name: 'spring-batch-core', version: springBatchCore]
libraries.spring_integration_core = [group: 'org.springframework.integration', name: 'spring-integration-core', version: springIntegrationVersion]
libraries.spring_integration_amqp = [group: 'org.springframework.integration', name: 'spring-integration-amqp', version: springIntegrationVersion]

libraries.spring_cloud_starter_consul_config = [group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-config', version: springCloudVersion]
libraries.spring_cloud_starter_consul_discovery = [group: 'org.springframework.cloud', name: 'spring-cloud-consul-discovery', version: springCloudVersion]
libraries.spring_cloud_starter_sleuth = [group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth']
libraries.spring_cloud_dependencies = [group: 'org.springframework.cloud', name: 'spring-cloud-dependencies']

// Project Reactor
libraries.reactor_core = [group: 'io.projectreactor', name: 'reactor-core', version: reactorCoreVersion]
libraries.reactor_rabbitmq = [group: 'io.projectreactor.rabbitmq', name: 'reactor-rabbitmq', version: reactorRabbitmqVersion]
libraries.reactor_grpc_stub = [group: 'com.salesforce.servicelibs', name: 'reactor-grpc-stub', version: reactorGrpcStubVersion]

// Database and Hibernate
libraries.caffeine = [group: 'com.github.ben-manes.caffeine', name: 'caffeine']
libraries.caffeine_jcache = [group: 'com.github.ben-manes.caffeine', name: 'jcache']
libraries.hibernate_core = [group: 'org.hibernate', name: 'hibernate-core']
libraries.hibernate_envers = [group: 'org.hibernate', name: 'hibernate-envers', version: hibernateEnversVersion]
libraries.hibernate_jcache = [group: 'org.hibernate', name: 'hibernate-jcache']
libraries.hikari_cp = [group: 'com.zaxxer', name: 'HikariCP']
libraries.liquibase_core = [group: 'org.liquibase', name: 'liquibase-core']
libraries.oracle = [group: 'com.oracle', name: 'ojdbc8', version: ojdbcVersion]
libraries.postgresql = [group: 'org.postgresql', name: 'postgresql', version:  postgresqlVersion]

// Others
libraries.aspectjrt = [group: 'org.aspectj', name: 'aspectjrt', version: aspectjrt]
libraries.aspectjtools = [group: 'org.aspectj', name: 'aspectjtools', version: aspectjrt]
libraries.bcprov_ext_jdk15on = [group: 'org.bouncycastle', name: 'bcprov-ext-jdk15on', version: bouncycastleVersion]
libraries.byte_buddy = [group: 'net.bytebuddy', name: 'byte-buddy', version: byteBuddyVersion]
libraries.byte_buddy_agent = [group: 'net.bytebuddy', name: 'byte-buddy-agent', version: byteBuddyVersion]
libraries.commons_collections4 = [group: 'org.apache.commons', name: 'commons-collections4', version: commonsCollectionsVersion]
libraries.common_compress = [group: 'org.apache.commons', name: 'commons-compress', version: commonCompressVersion]
libraries.commons_io = [group: 'commons-io', name: 'commons-io', version: commomnsIoVersion]
libraries.grpc_spring_boot_starter = [group: 'net.devh', name: 'grpc-spring-boot-starter', version: grpcSpringBootStarterVersion]
libraries.grpc_server_spring_boot_starter = [group: 'net.devh', name: 'grpc-server-spring-boot-starter', version: grpcSpringBootStarterVersion]
libraries.grpc_client_spring_boot_starter = [group: 'net.devh', name: 'grpc-client-spring-boot-starter', version: grpcSpringBootStarterVersion]
libraries.grpc_netty_shaded = [group: 'io.grpc', name: 'grpc-netty-shaded', version: grpcNettyShadedVersion]
libraries.guava = [group: 'com.google.guava', name: 'guava', version: guavaVersion]
libraries.protobuf_java = [group: 'com.google.protobuf', name: 'protobuf-java', version: googleProtobufVersion]
libraries.protobuf_java_util = [group: 'com.google.protobuf', name: 'protobuf-java-util', version: googleProtobufVersion]
libraries.xstream = [group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.19']
libraries.vavr = [group: 'io.vavr', name: 'vavr', version: '0.10.4']

// Testing
libraries.spring_test = [group: 'org.springframework', name: 'spring-test', version: springVersion]
libraries.groovy_all = [group: 'org.codehaus.groovy', name: 'groovy-all', version: groovyVersion]
libraries.json_path = [group: 'com.jayway.jsonpath', name: 'json-path']
libraries.junit_platform_commons = [group: 'org.junit.platform', name: 'junit-platform-commons', version: junitPlatformCommonsVersion]
libraries.spock_spring = [group: 'org.spockframework', name: 'spock-spring', version: spockSpringVersion]

// @formatter:on

configurations.all {
  exclude group: 'org.glassfish', module: 'javax.el'
  exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'

  resolutionStrategy {
    failOnVersionConflict()
    preferProjectModules()

    force libraries.groovy_all
    force libraries.byte_buddy
    force libraries.byte_buddy_agent
    force libraries.guava
    force libraries.aspectjrt
    force libraries.aspectjtools
    force libraries.common_compress
    force libraries.bcprov_ext_jdk15on
    force libraries.commons_io
    force libraries.protobuf_java
    force libraries.protobuf_java_util
    force libraries.reactor_grpc_stub
    force libraries.grpc_netty_shaded
    force libraries.reactor_core
    force libraries.spring_test
  }
}

dependencies {
  implementation platform("org.springframework.cloud:spring-cloud-dependencies:2020.0.4")
  implementation(group: "com.silenteight.sep.base", name: "sep-base-common") {
    exclude group: 'io.zipkin.reporter2'
    exclude group: 'org.springframework'
  }
  implementation platform("com.silenteight.sep:sep-dependencies:1.12.1")
  annotationProcessor platform(
      "com.silenteight.sep:sep-dependencies:1.12.1")
  implementation libraries.registration_api_library
  implementation libraries.registration_api_proto
  implementation libraries.spring_boot_starter_jpa
  implementation libraries.oracle
  implementation libraries.grpc_client_spring_boot_starter
  implementation libraries.grpc_server_spring_boot_starter
  implementation libraries.commons_collections4

  implementation libraries.spring_batch_core
  implementation libraries.spring_boot_starter_quartz

  implementation libraries.protobuf_java
  implementation libraries.protobuf_java_util
  implementation libraries.reactor_grpc_stub
  implementation libraries.reactor_rabbitmq

  implementation libraries.spring_boot
  implementation libraries.spring_boot_actuator
  implementation libraries.spring_boot_starter_undertow
  implementation libraries.spring_boot_starter_validation
  implementation libraries.spring_boot_starter_web
  implementation libraries.spring_cloud_starter_consul_config
  implementation libraries.spring_cloud_starter_consul_discovery
  implementation libraries.spring_cloud_starter_sleuth
  implementation libraries.spring_boot_starter_amqp
  implementation libraries.spring_data_jdbc
  implementation libraries.spring_retry
  implementation libraries.spring_cloud_dependencies
  implementation libraries.spring_integration_core
  implementation libraries.spring_integration_amqp

  implementation libraries.silenteight_sep_base_common
  implementation libraries.silenteight_sep_base_aspects
  implementation libraries.silenteight_serp_protocol_base
  implementation libraries.silenteight_serp_protocol_scb
  implementation libraries.silenteight_sep_base_testing
  implementation libraries.silenteight_commons_core
  implementation libraries.registration_api_library
  implementation libraries.registration_api_proto

  implementation libraries.groovy_all
  implementation libraries.json_path
  implementation libraries.xstream
  implementation libraries.vavr

  testImplementation libraries.spock_spring
  testRuntimeOnly libraries.junit_platform_commons
}

configurations {
  starterDatabase
  starterDatabaseRuntime

}
apply from: "${gradleScriptDir}/starterDatabase.gradle"
