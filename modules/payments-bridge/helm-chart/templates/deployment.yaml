apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
      annotations:
        fluentbit.io/parser: spring-logback-json
    spec:
      containers:
        - name: {{ .Values.name }}
          livenessProbe:
            httpGet:
              path: "/rest/pb/management/health/liveness"
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: "/rest/pb/management/health/readiness"
              port: 8080
            failureThreshold: 30
            initialDelaySeconds: 30
            timeoutSeconds: 10
          env:
            - name: 'PB_DB_HOST'
              value: {{ .Values.pbDbHost }}
            - name: 'PB_DB_PORT'
              value: {{ .Values.pbDbPort | quote }}
            - name: 'PB_DB_NAME'
              value: {{ .Values.pbDbName }}
            - name: 'PB_DB_USERNAME'
              value: {{ .Values.pbDbUsername }}
            - name: 'PB_DB_PASSWORD'
              value: {{ .Values.pbDbPassword }}
            - name: 'SPRING_RABBITMQ_ADDRESSES'
              value: {{ .Values.springRabbitmqAddresses }}
            - name: 'SPRING_RABBITMQ_PORT'
              value: {{ .Values.springRabbitmqPort | quote }}
            - name: 'SPRING_RABBITMQ_USERNAME'
              value: {{ .Values.springRabbitmqUsername }}
            - name: 'SPRING_RABBITMQ_PASSWORD'
              value: {{ .Values.springRabbitmqPassword }}
            - name: 'SPRING_RABBITMQ_VIRTUAL_HOST'
              value: {{ .Values.springRabbitmqVirtualHost }}
            - name: 'SPRING_PROFILES_ACTIVE'
              value: {{ .Values.springProfilesActive }}
            - name: 'SERP_SHOW_ENV'
              value: 'true'
            - name: 'GRPC_CLIENT_ae_ADDRESS'
              value: {{ .Values.grpcClientAeAddress }}
            - name: 'GRPC_CLIENT_datasource_ADDRESS'
              value: {{ .Values.grpcClientDatasourceAddress }}
            - name: 'GRPC_CLIENT_governance_ADDRESS'
              value: {{ .Values.grpcClientGovernanceAddress }}
            - name: 'PB_CMAPI_CALLBACK_ENABLED'
              value: {{ .Values.pbCmapiCallbackEnabled | squote }}
            - name: 'PB_CMAPI_CALLBACK_ENDPOINT'
              value: {{ .Values.pbCmapiCallbackEndpoint | squote }}
            - name: 'SECURITY_OAUTH2_CLIENT_CLIENT_ID'
              value: {{ .Values.oauthClientId | squote }}
            - name: 'SECURITY_OAUTH2_CLIENT_CLIENT_SECRET'
              value: {{ .Values.oauthClientSecret | squote }}
            - name: 'SECURITY_OAUTH2_CLIENT_USER_AUTHORIZATION_URI'
              value: {{ .Values.oauthClientAuthUri | squote }}
            - name: 'SECURITY_OAUTH2_CLIENT_ACCESS_TOKEN_URI'
              value: {{ .Values.oauthClientAccessUri | squote }}
            - name: 'SECURITY_OAUTH2_CLIENT_SCOPE'
              value: {{ .Values.oauthClientScope | squote }}
            - name: 'SECURITY_OAUTH2_CLIENT_GRANT_TYPE'
              value: 'client_credentials'
          image: {{ .Values.image_repo }}:{{ .Values.image_tag }}
          resources:
            limits:
              memory: {{ .Values.memoryLimit | quote }}
            requests:
              memory: {{ .Values.memoryRequest | quote }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args: ["--logging.config=file:/etc/logback.xml"]
          volumeMounts:
            - mountPath: /etc/logback.xml
              name: logback-config
              subPath: logback-config-file
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8081
              name: grpc
      volumes:
        - name: "logback-config"
          configMap:
            name: "{{ .Values.name }}-logback-configmap"
