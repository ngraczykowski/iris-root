apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.name }}-spring
data:
  application.yml: |
    pb:
      alert-message:
        original-message-deleted-after-recommendation: false
      cmapi:
        callback:
          client-registration-id: callback
          enabled: {{ .Values.pbCmapiCallbackEnabled }}
          endpoint: {{ .Values.pbCmapiCallbackEndpoint | quote }}
      data-retention:
        alert-data:
          expiration: {{ .Values.dataRetention.alertExpiration | quote }}
          cron: {{ .Values.dataRetention.alertCron | quote }}
        personal-information:
          expiration: {{ .Values.dataRetention.piiExpiration | quote }}
          cron: {{ .Values.dataRetention.piiCron | quote }}
      email-notification:
          from: {{ .Values.emailNotification.from | quote }}
          to: {{ .Values.emailNotification.to | quote }}
          cc: {{ .Values.emailNotification.cc | quote }}
          cron: {{ .Values.emailNotification.cron | quote }}
          amount: {{ .Values.emailNotification.amount }}
          cmapi-enabled: {{ .Values.emailNotification.cmapiEnabled }}
          learning-enabled: {{ .Values.emailNotification.learningEnabled }}
      agents:
        specific-terms2:
          bucket: {{ .Values.agents.specificTerms2.bucket | quote }}
      metrics:
        alert-resolution:
          percentiles: [ 0.5, 0.95 ]
      svb-learning:
        discriminator-prefix: {{ .Values.svbLearning.discriminatorPrefix | quote }}
    grpc:
      client:
        GLOBAL:
          negotiation-type: PLAINTEXT
        ae:
          address: {{ .Values.grpcClientAeAddress | quote }}
        datasource:
          address: {{ .Values.grpcClientDatasourceAddress | quote }}
        governance:
          address: {{ .Values.grpcClientGovernanceAddress | quote }}
        companynamesurroundingagent:
          address: {{ .Values.grpcClientCompanyNameSurroundingAgentAddress | quote }}
    environment:
      name: {{ .Values.environment.name | quote }}
    spring:
      security:
        oauth2:
          client:
            registration:
              callback:
                client-id: {{ .Values.oauthClientId | quote }}
                client-secret: {{ .Values.oauthClientSecret | quote }}
                scope: {{ .Values.oauthClientScope | quote }}
            provider:
              external:
                token-uri: {{ .Values.oauthClientTokenUri | quote }}
    
      mail:
        host: {{ .Values.mail.host | quote }}
        port: {{ .Values.mail.port }}
        username: {{ .Values.mail.username | quote }}
        password: {{ .Values.mail.password | quote }}
        properties:
          mail:
            smtp:
              auth: true
              starttls:
                enable: true
            transport:
              protocol: smtp
    management:
      server:
        port: {{ .Values.ports.management }}

