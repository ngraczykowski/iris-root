#------------------------------------------------------------------------------
# Ingress authorization
#------------------------------------------------------------------------------
keycloak:
  realm: sierra
  auth-server-url: https://auth.silent8.cloud
  ssl-required: external
  resource: sierra-dev-api
  use-resource-role-mappings: true
  bearer-only: true

#---------------------------------------------------------------------------------------------------
# MESSAGING CONCURRENCY
#---------------------------------------------------------------------------------------------------
pb:
  messaging:
    concurrency: 4
    prefetch: 25

  #-------------------------------------------------------------------------------------------------
  # CMAPI CALLBACK
  #-------------------------------------------------------------------------------------------------
  cmapi:
    callback:
      enabled: false
      client-registration-id: callback
      connectionTimeout: 10s
      readTimeout: 10s

  #-------------------------------------------------------------------------------------------------
  # ALERT MESSAGES
  #-------------------------------------------------------------------------------------------------
  alert-message:
    stored-queue-limit: 1000
    decision-requested-time: 15s
    original-message-deleted-after-recommendation: true
    max-hits-per-alert: 10

  #-------------------------------------------------------------------------------------------------
  # SVB Learning
  #-------------------------------------------------------------------------------------------------
  svb-learning:
    etl:
      alert:
        time-zone: America/Los_Angeles
        batch-size: 50

#---------------------------------------------------------------------------------------------------
# Warehouse
#---------------------------------------------------------------------------------------------------
wh:
  integration:
    outbound:
      request-origin:
        learning:
          priority: 3
        cmapi:
          priority: 7
        unset:
          priority: 1

#---------------------------------------------------------------------------------------------------
# SERVER
#---------------------------------------------------------------------------------------------------

# Embedded server configuration
server:
  forward-headers-strategy: native
  undertow:
    threads:
      io: ${pb.web.threads.io:4}
      worker: ${pb.web.threads.worker:16}

  error:
    include-exception: true
    include-stacktrace: never

  servlet:
    context-path: /rest/pb

#---------------------------------------------------------------------------------------------------
# MANAGEMENT
#---------------------------------------------------------------------------------------------------

# Management HTTP server
management:
  endpoint:
    health:
      show-details: always

  endpoints:
    web:
      base-path: /management
      exposure:
        include: [ "health", "info", "liquibase", "metrics", "prometheus", "loggers" ]
    loggers:
      sensitive: false

  metrics:
    tags:
      application: /rest/${spring.application.name}

spring:
  #-------------------------------------------------------------------------------------------------
  # GENERAL
  #-------------------------------------------------------------------------------------------------
  application:
    name: pb

  aop:
    auto: false

  task:
    execution:
      pool:
        core-size: 8
        keep-alive: 10s
        max-size: 16
        queue-capacity: 10000
      thread-name-prefix: pool-task-

    scheduling:
      pool:
        size: 4
      thread-name-prefix: pool-scheduling-

  main:
    banner-mode: 'off'

  #-------------------------------------------------------------------------------------------------
  # CONSUL SERVICE DISCOVERY
  #-------------------------------------------------------------------------------------------------
  cloud:
    consul:
      config:
        enabled: false
      enabled: false

  #-------------------------------------------------------------------------------------------------
  # DATABASE
  #-------------------------------------------------------------------------------------------------
  datasource:
    # Postgres database
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://${pb.db.host}:${pb.db.port}/${pb.db.name}?currentSchema=${pb.db.schema:public}
    username: ${pb.db.username}
    password: ${pb.db.password}
    initialization-mode: never

    # Hikari pool configuration
    hikari:
      pool-name: Database-Pool
      minimum-idle: ${pb.db.connections.min:1}
      maximum-pool-size: ${pb.db.connections.max:10}
      auto-commit: false
      schema: ${pb.db.schema:public}
      isolate-internal-queries: true
      # NOTE(ahaczewski): Forces HikariCP to commit the transaction after opening fresh connection.
      #  Without it, the connection transaction is left in OPEN state instead of IDLE, because
      #  just before HikariCP runs `SET SESSION spb.h_path TO '${ae.db.schema}'` which begins
      #  transaction. Thus, with that query as workaround, we force the transaction commit.
      connection-init-sql: SELECT 1
      data-source-properties:
        ApplicationName: SEAR Payments Bridge
        reWriteBatchedInserts: true

  # Database migrations
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: ${pb.db.schema:public}
    contexts: default
    database-change-log-table: pb_databasechangelog
    database-change-log-lock-table: pb_databasechangeloglock

  # Spring Data JPA
  jpa:
    database: POSTGRESQL
    show-sql: false
    open-in-view: false
    database-platform: com.silenteight.sep.base.common.support.hibernate.FixedPostgreSql95Dialect

    hibernate:
      ddl-auto: none
      use-new-id-generator-mappings: true

    properties:
      hibernate.cache.use_query_cache: false
      hibernate.connection.handling_mode: DELAYED_ACQUISITION_AND_HOLD
      hibernate.connection.provider_disables_autocommit: true
      hibernate.generate_statistics: false
      hibernate.id.optimizer.pooled.preferred: pooled-lo
      hibernate.jdbc.batch_size: 2048
      hibernate.jdbc.lob.non_contextual_creation: true
      hibernate.jdbc.use_get_generated_keys: true
      hibernate.jdbc.time_zone: UTC
      hibernate.temp.use_jdbc_metadata_defaults: false
      hibernate.order_inserts: true
      hibernate.order_updates: true
      #org.hibernate.flushMode: COMMIT
      org.hibernate.envers.audit_table_suffix: _audit
      org.hibernate.envers.store_data_at_delete: true

  #-------------------------------------------------------------------------------------------------
  # RABBITMQ
  #-------------------------------------------------------------------------------------------------
  rabbitmq:
    listener:
      type: simple
      direct:
        consumers-per-queue: ${pb.messaging.concurrency:4}
        prefetch: ${pb.messaging.prefetch:25}
        retry:
          enabled: true
          multiplier: 2
      simple:
        concurrency: 1
        max-concurrency: ${pb.messaging.concurrency:4}
        prefetch: ${pb.messaging.prefetch:25}
        retry:
          enabled: true
          multiplier: 2
          max-attempts: 5
          initial-interval: 500
          max-interval: 4000

  jackson:
    default-property-inclusion: NON_NULL
    parser:
      # NOTE(ahaczewski): Firco Continuity sends unescaped \x02 characters in JSON.
      allow_unquoted_control_chars: true

  webflux:
    base-path: /rest/${spring.application.name}

  #-------------------------------------------------------------------------------------------------
  # SECURITY
  #-------------------------------------------------------------------------------------------------
  security:
    oauth2:
      client:
        registration:
          callback:
            provider: external
            # client-id: <CLIENT ID>
            # client-secret: <CLIENT SECRET>
            client-authentication-method: basic
            authorization-grant-type: client_credentials
            scope:
        provider:
          external:
            token-uri: ""

info:
  env: ${spb.env:local}

grpc:
  server:
    max-inbound-message-size: 8MB
  client:
    GLOBAL:
      negotiation-type: PLAINTEXT
      max-inbound-message-size: 8MB
