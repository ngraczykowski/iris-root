#---------------------------------------------------------------------------------------------------
# REST SERVER
#---------------------------------------------------------------------------------------------------
server:
  port: 24602

#---------------------------------------------------------------------------------------------------
# GRPC SERVER
#---------------------------------------------------------------------------------------------------
grpc:
  server:
    port: 24603
  client:
    GLOBAL:
      negotiation-type: PLAINTEXT
    ae:
      address: static://localhost:${grpc.server.port}
    datasource:
      address: static://localhost:${grpc.server.port}
    governance:
      address: static://localhost:${grpc.server.port}
    companynamesurroundingagent:
      address: static://localhost:${grpc.server.port}

pb:
  #-------------------------------------------------------------------------------------------------
  # DATABASE
  #-------------------------------------------------------------------------------------------------
  db:
    host: localhost
    port: 24681
    schema: public
    name: paymentsbridge
    username: paymentsbridge
    password: paymentsbridge

  #-------------------------------------------------------------------------------------------------
  # WEB CONCURRENCY
  #-------------------------------------------------------------------------------------------------
  web:
    threads:
      io: 2
      worker: 4

  #-------------------------------------------------------------------------------------------------
  # MESSAGING CONCURRENCY
  #-------------------------------------------------------------------------------------------------
  messaging:
    concurrency: 2
    prefetch: 2

  #-------------------------------------------------------------------------------------------------
  # CMAPI CALLBACK
  #-------------------------------------------------------------------------------------------------
  cmapi:
    callback:
      endpoint: "http://localhost:5000/callback-recommendation"
      enabled: false

  #-------------------------------------------------------------------------------------------------
  # ALERT MESSAGES
  #-------------------------------------------------------------------------------------------------
  alert-message:
    # NOTE(ahaczewski): For ease of debugging, the original message is stored indefinitely
    #  in the pb_alert_message_payload table.
    original-message-deleted-after-recommendation: false

  #-------------------------------------------------------------------------------------------------
  # SECURITY
  #
  # The security is disabled by default for local development.
  # Please see the README.md for information on how to enable it.
  #-------------------------------------------------------------------------------------------------
  security:
    disable-security: true

  #-------------------------------------------------------------------------------------------------
  # Notification sending
  #-------------------------------------------------------------------------------------------------
  email-notification:
    from: "from@s8.com"
    to: "to@s8.com"
    cron: "0 * * * * *"
    amount: 10
    cmapi-enabled: false
    learning-enabled: false

  #-------------------------------------------------------------------------------------------------
  # SVB Learning
  #-------------------------------------------------------------------------------------------------
  svb-learning:
    discriminator-prefix: "sierra"

spring:
  #-------------------------------------------------------------------------------------------------
  # MULTI-THREADING
  #-------------------------------------------------------------------------------------------------
  task:
    execution:
      pool:
        core-size: 2
        max-size: 4
        queue-capacity: 1000

  #-------------------------------------------------------------------------------------------------
  # RABBITMQ
  #-------------------------------------------------------------------------------------------------
  rabbitmq:
    host: localhost
    port: 24160
    username: dev
    password: dev
    virtual-host: /

  #---------------------------------------------------------------------------------------------------
  # SECURITY
  #---------------------------------------------------------------------------------------------------

  #------------------------------------------------------------------------------
  # Egress authorization
  #
  # NOTE(ahaczewski): The configuration below is for development purposes only,
  #   and the `egress-mock` realm in our Keycloak is used to simulate the customer
  #   auth server.
  #
  #------------------------------------------------------------------------------
  security:
    oauth2:
      client:
        registration:
          callback:
            client-id: cmapi-dev
            # Set the client-secret via environment variable SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_callback_CLIENT-SECRET
            #client-secret: <CLIENT SECRET>
        provider:
          external:
            token-uri: https://auth.silent8.cloud/realms/egress-mock/protocol/openid-connect/token

  #-------------------------------------------------------------------------------------------------
  # EMAIL SENDING
  # NOTE: The configuration below is for development purposes only
  #-------------------------------------------------------------------------------------------------
  mail:
    host: localhost
    port: 24170
    username: user
    password: password
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
        transport:
          protocol: smtp

#------------------------------------------------------------------------------
# Ingress authorization
#------------------------------------------------------------------------------
keycloak:
  realm: sierra
  auth-server-url: https://auth.silent8.cloud
  ssl-required: external
  resource: sierra-dev-api
  use-resource-role-mappings: true
  bearer-only: true

management:
  server:
    port: 24604
  health:
    probes:
      enabled: true
