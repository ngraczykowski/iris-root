ext {
  libraries = [:]

  //***********************************
  // Silent Eight
  //***********************************
  adjudicationEngineApiVersion = "0.5.0"
  governanceModelApiVersion = "1.9.0"
  silenteightLearningEngineApiVersion = "0.2.0"
  silenteightDataSourceApiVersion = "0.4.0"
  warehouseApiVersion = "1.5.0"
  worldCheckApiVersion = "0.1.0"
  historicalDecisionsApiVersion = "0.2.0"
  dataRetentionApiVersion = "0.0.1"

  //***********************************
  // Dependency Versions
  //***********************************
  groovyVersion = '3.0.8'
  testContainersVersion = '1.15.3'
  junitJupiterVersion = "5.6.0"
  mockitoVersion = "3.8.0"
  spockVersion = '2.0-groovy-3.0'
  springBootVersion = "2.4.2"
  springCloudVersion = "3.0.2"
  springRabbitVersion = "2.3.6"
  springVersion = "5.3.5"
}

// Silent Eight
libraries.adjudication_engine_api = [group: 'com.silenteight.adjudication.api', name: 'adjudication-api', version: adjudicationEngineApiVersion]
libraries.data_source_api = [group: 'com.silenteight.sens.date-source-api', name: 'data-source-api', version: silenteightDataSourceApiVersion]
libraries.data_source_categories_api = [group: 'com.silenteight.sens.date-source-api', name: 'data-source-categories-api', version: silenteightDataSourceApiVersion]
libraries.data_source_comments_api = [group: 'com.silenteight.sens.date-source-api', name: 'data-source-comments-api', version: silenteightDataSourceApiVersion]
libraries.silenteight_governance_model_api = [group: 'com.silenteight.governance.api', name: 'se-model-api', version: governanceModelApiVersion]
libraries.silenteight_learningstore_api = [group: 'com.silenteight.learningengine.api', name: 'learning-store-api', version: silenteightLearningEngineApiVersion]
libraries.warehouse_api = [group: 'com.silenteight.warehouse.api', name: 'se-data-api', version: warehouseApiVersion]
libraries.worldcheck_api = [group: 'com.silenteight.worldcheck.api', name: 'protocol-world-check', version: worldCheckApiVersion]
libraries.historical_decisions_api = [group: 'com.silenteight.historicaldecisions.api', name: 'historical-decisions-model-api', version: historicalDecisionsApiVersion]
libraries.data_retention_api = [group: 'com.silenteight.sens.data-retention-api', name: 'data-retention-api', version: dataRetentionApiVersion]

// Spring
libraries.spring_aspects = [group: 'org.springframework', name: 'spring-aspects', version: springVersion]
libraries.spring_boot = [group: 'org.springframework.boot', name: 'spring-boot', version: springBootVersion]
libraries.spring_boot_actuator = [group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootVersion]
libraries.spring_boot_configuration_processor = [group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: springBootVersion]
libraries.spring_boot_starter_undertow = [group: 'org.springframework.boot', name: 'spring-boot-starter-undertow',version: springBootVersion]
libraries.spring_boot_starter_validation = [group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: springBootVersion]
libraries.spring_boot_starter_web = [group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion]
libraries.spring_data_jpa = [group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion]
libraries.spring_retry = [group: 'org.springframework.retry', name: 'spring-retry', version: '1.3.1']

// Spring Cloud
libraries.spring_cloud_starter_consul_config = [group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-config', version: springCloudVersion]
libraries.spring_cloud_starter_consul_discovery = [group: 'org.springframework.cloud', name: 'spring-cloud-consul-discovery', version: springCloudVersion]
libraries.spring_cloud_starter_sleuth = [group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: springCloudVersion]

// Database
libraries.hibernate_types = [group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '2.11.1']
libraries.liquibase_core = [group: 'org.liquibase', name: 'liquibase-core', version: '4.3.1']
// fix for database lock on nomad
libraries.liquibase_sessionlock = [group: 'com.github.blagerweij', name: 'liquibase-sessionlock', version: '1.4.0']
libraries.postgresql = [group: 'org.postgresql', name: 'postgresql', version: '42.2.18']

// APIs
libraries.javax_validation_api = [group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final']
libraries.slf4j_api = [group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30']
libraries.commons_csv = [group: 'org.apache.commons', name: 'commons-csv', version: '1.8']

// OpenAPI & Swagger
libraries.springfox_oas = [group: 'io.springfox', name: 'springfox-oas', version: '3.0.0']

// JWT
libraries.jjwt = [group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1']

// GRPC
libraries.grpc_spring_boot_starter = [group: 'net.devh', name: 'grpc-spring-boot-starter', version: '2.12.0.RELEASE' ]
libraries.protobuf_util = [group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.15.6']

// Amazon
libraries.amazon_s3 = [group: 'software.amazon.awssdk', name: 's3', version: '2.16.61']
libraries.amazon_aws = [group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.1017']

// Others
libraries.classgraph = [group: 'io.github.classgraph', name: 'classgraph', version: '4.8.108']
libraries.commons_compress = [group: 'org.apache.commons', name: 'commons-compress', version: '1.20']
libraries.commons_lang3 = [group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0']
libraries.io_utils = [group: 'commons-io', name: 'commons-io', version: '2.8.0']
libraries.jetbrains_annotations = [group: 'org.jetbrains', name: 'annotations', version: '20.1.0']
libraries.lombok = [group: 'org.projectlombok', name: 'lombok', version: '1.18.18']
libraries.orika = [group: 'ma.glasnost.orika', name: 'orika-core', version: '1.5.4']
libraries.shedlock_jdbc_template = [group: 'net.javacrumbs.shedlock', name: 'shedlock-provider-jdbc-template', version: '4.24.0']
libraries.shedlock_spring = [group: 'net.javacrumbs.shedlock', name: 'shedlock-spring', version: '4.24.0']
libraries.streamex = [group: 'one.util', name: 'streamex', version: '0.6.8']

// Messaging
libraries.lz4_java = [group: 'org.lz4', name: 'lz4-java', version: '1.7.1']
libraries.spring_amqp = [group: 'org.springframework.amqp', name: 'spring-amqp', version: springRabbitVersion]
libraries.spring_rabbit = [group: 'org.springframework.amqp', name: 'spring-rabbit', version: springRabbitVersion]

// Testing
libraries.assertj_core = [group: 'org.assertj', name: 'assertj-core', version: '3.20.2']
libraries.groovy_all = [group: 'org.codehaus.groovy', name: 'groovy-all', version: groovyVersion]
libraries.junit_jupiter_api = [group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion]
libraries.junit_jupiter_engine = [group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion]
libraries.junit_jupiter_testcontainers = [group: 'org.testcontainers', name: 'junit-jupiter', version: testContainersVersion]
libraries.localstack = [group: 'org.testcontainers', name: 'localstack', version: testContainersVersion]
libraries.mockito_core = [group: 'org.mockito', name: 'mockito-core', version: mockitoVersion]
libraries.mockito_junit_jupiter = [group: 'org.mockito', name: 'mockito-junit-jupiter', version: mockitoVersion]
libraries.spock_core = [group: 'org.spockframework', name: 'spock-core', version: spockVersion]
libraries.spock_spring = [group: 'org.spockframework', name: 'spock-spring', version: spockVersion]
libraries.spring_rabbit_junit = [group: 'org.springframework.amqp', name: 'spring-rabbit-junit', version: springBootVersion]
libraries.spring_rabbit_test = [group: 'org.springframework.amqp', name: 'spring-rabbit-test', version: springBootVersion]
libraries.spring_starter_test = [group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion]
libraries.spring_test = [group: 'org.springframework', name: 'spring-test', version: springVersion]
libraries.testcontainers = [group: 'org.testcontainers', name: 'testcontainers', version: testContainersVersion]

libraries.ecs_logging_core = [group: 'co.elastic.logging', name: 'ecs-logging-core', version: '1.0.1']
libraries.logback_ecs_encoder = [group: 'co.elastic.logging', name: 'logback-ecs-encoder', version: libraries.ecs_logging_core.version]
libraries.micrometer_prometheus = [group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.6.7']

configurations.all {
  exclude group: 'org.glassfish', module: 'javax.el'
  exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'

  resolutionStrategy {
    failOnVersionConflict()
    preferProjectModules()

    force libraries.ecs_logging_core
    force libraries.logback_ecs_encoder

  }
}

dependencies {
  annotationProcessor libraries.lombok
  annotationProcessor libraries.spring_boot_configuration_processor
  compile libraries.commons_csv
  compile libraries.javax_validation_api
  compile libraries.springfox_oas
  compileOnly libraries.lombok
  implementation libraries.adjudication_engine_api
  implementation libraries.amazon_aws
  implementation libraries.amazon_s3
  implementation libraries.classgraph
  implementation libraries.commons_compress
  implementation libraries.commons_lang3
  implementation libraries.data_source_api
  implementation libraries.data_source_categories_api
  implementation libraries.data_source_comments_api
  implementation libraries.data_retention_api
  implementation libraries.grpc_spring_boot_starter
  implementation libraries.io_utils
  implementation libraries.jetbrains_annotations
  implementation libraries.jjwt
  implementation libraries.hibernate_types
  implementation libraries.liquibase_core
  implementation libraries.liquibase_sessionlock
  implementation libraries.lz4_java
  implementation libraries.orika
  implementation libraries.postgresql
  implementation libraries.protobuf_util
  implementation libraries.shedlock_jdbc_template
  implementation libraries.shedlock_spring
  implementation libraries.silenteight_governance_model_api
  implementation libraries.silenteight_learningstore_api
  implementation libraries.slf4j_api
  implementation libraries.spring_amqp
  implementation libraries.spring_aspects
  implementation libraries.spring_boot
  implementation libraries.spring_boot_actuator
  implementation libraries.spring_boot_starter_undertow
  implementation libraries.spring_boot_starter_validation
  implementation libraries.spring_boot_starter_web
  implementation libraries.spring_cloud_starter_consul_config
  implementation libraries.spring_cloud_starter_consul_discovery
  implementation libraries.spring_cloud_starter_sleuth
  implementation libraries.spring_data_jpa
  implementation libraries.spring_rabbit
  implementation libraries.spring_retry
  implementation libraries.streamex
  implementation libraries.warehouse_api
  implementation libraries.worldcheck_api
  implementation libraries.historical_decisions_api
  implementation libraries.micrometer_prometheus
  runtimeOnly libraries.ecs_logging_core
  runtimeOnly libraries.logback_ecs_encoder

  testAnnotationProcessor libraries.lombok
  testCompile libraries.groovy_all
  testCompile libraries.lombok
  testCompile libraries.spock_core
  testImplementation libraries.assertj_core
  testImplementation libraries.junit_jupiter_api
  testImplementation libraries.junit_jupiter_testcontainers
  testImplementation libraries.localstack
  testImplementation libraries.mockito_core
  testImplementation libraries.mockito_junit_jupiter
  testImplementation libraries.spock_spring
  testImplementation libraries.spring_starter_test
  testImplementation libraries.spring_test
  testImplementation libraries.testcontainers
  testRuntimeOnly libraries.junit_jupiter_engine
}

repositories {
  mavenCentral()
}

test {
  useJUnitPlatform()
}
