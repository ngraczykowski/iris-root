/*
 * HSCB-Bridge-batch API
 * HSCB-Bridge-batch API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.silenteight.hsbc.bridge.bulk.rest;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * BatchStatusResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-04-02T11:57:31.043Z[GMT]")
public class BatchStatusResponse {
  @SerializedName("batchId")
  private String batchId = null;

  @SerializedName("batchStatus")
  private BatchStatus batchStatus = null;

  @SerializedName("policyName")
  private String policyName = null;

  @SerializedName("requestedAlerts")
  private List<BatchAlertItem> requestedAlerts = null;

  public BatchStatusResponse batchId(String batchId) {
    this.batchId = batchId;
    return this;
  }

   /**
   * Get batchId
   * @return batchId
  **/
  @Schema(description = "")
  public String getBatchId() {
    return batchId;
  }

  public void setBatchId(String batchId) {
    this.batchId = batchId;
  }

  public BatchStatusResponse batchStatus(BatchStatus batchStatus) {
    this.batchStatus = batchStatus;
    return this;
  }

   /**
   * Get batchStatus
   * @return batchStatus
  **/
  @Schema(description = "")
  public BatchStatus getBatchStatus() {
    return batchStatus;
  }

  public void setBatchStatus(BatchStatus batchStatus) {
    this.batchStatus = batchStatus;
  }

  public BatchStatusResponse policyName(String policyName) {
    this.policyName = policyName;
    return this;
  }

  /**
   * Get solvingModelName
   * @return solvingModelName
   **/
  @Schema(description = "")
  public String getPolicyName() {
    return policyName;
  }

  public void setPolicyName(String policyName) {
    this.policyName = policyName;
  }

  public BatchStatusResponse requestedAlerts(List<BatchAlertItem> requestedAlerts) {
    this.requestedAlerts = requestedAlerts;
    return this;
  }

  public BatchStatusResponse addRequestedAlertsItem(BatchAlertItem requestedAlertsItem) {
    if (this.requestedAlerts == null) {
      this.requestedAlerts = new ArrayList<BatchAlertItem>();
    }
    this.requestedAlerts.add(requestedAlertsItem);
    return this;
  }

   /**
   * Get requestedAlerts
   * @return requestedAlerts
  **/
  @Schema(description = "")
  public List<BatchAlertItem> getRequestedAlerts() {
    return requestedAlerts;
  }

  public void setRequestedAlerts(List<BatchAlertItem> requestedAlerts) {
    this.requestedAlerts = requestedAlerts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchStatusResponse batchStatusResponse = (BatchStatusResponse) o;
    return Objects.equals(this.batchId, batchStatusResponse.batchId) &&
        Objects.equals(this.batchStatus, batchStatusResponse.batchStatus) &&
        Objects.equals(this.requestedAlerts, batchStatusResponse.requestedAlerts) &&
        Objects.equals(this.policyName, batchStatusResponse.policyName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(batchId, batchStatus, requestedAlerts, policyName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchStatusResponse {\n");

    sb.append("    batchId: ").append(toIndentedString(batchId)).append("\n");
    sb.append("    batchStatus: ").append(toIndentedString(batchStatus)).append("\n");
    sb.append("    requestedAlerts: ").append(toIndentedString(requestedAlerts)).append("\n");
    sb.append("    policyName: ").append(toIndentedString(policyName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
