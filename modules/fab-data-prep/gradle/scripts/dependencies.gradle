ext {
  libraries = [:]
  springBootVersion = "2.6.4"
  springCloudVersion = "2021.0.1"
  sepDependenciesVersion = "2.5.0"
  silenteightSepBaseVersion = "1.12.5"
  silenteightUniversalDataSourceApiVersion = '1.2.0'
  silenteightDataSourceApiVersion = '0.18.0'
  coreBridgeRegistrationApiVersion = '1.14.0'
  groovyVersion = '3.0.9'
  testContainersVersion = '1.16.2'
  junitJupiterVersion = '5.8.2'
  mockitoVersion = '4.1.0'
  spockVersion = '2.1-M2-groovy-3.0'
}

libraries.silenteight_sep_base_common = [group: 'com.silenteight.sep.base', name: 'sep-base-common', version: silenteightSepBaseVersion]
libraries.universal_datasource_api_library = [group: 'com.silenteight.universaldatasource.api.library', name: 'uds-lib', version: silenteightUniversalDataSourceApiVersion]
libraries.data_source_agentinput_api = [group: 'com.silenteight.sens.date-source-api', name: 'data-source-agentinput-api', version: silenteightDataSourceApiVersion]
libraries.data_source_categories_api = [group: 'com.silenteight.sens.date-source-api', name: 'data-source-categories-api', version: silenteightDataSourceApiVersion]
libraries.data_source_api = [group: 'com.silenteight.sens.date-source-api', name: 'data-source-api', version: silenteightDataSourceApiVersion]
libraries.registration_api_proto = [group: 'com.silenteight.registration.api.library', name: 'registration-internal-protos', version: coreBridgeRegistrationApiVersion]
libraries.registration_lib = [group: 'com.silenteight.registration.api.library', name: 'registration-lib', version: coreBridgeRegistrationApiVersion]
libraries.silenteight_fab_cmapi_connector_api = [group: 'com.silenteight.fab', name: 'cmapi-connector-api', version: '1.0.0']
libraries.sear_rabbitmq_common_schema = [group: 'com.silenteight.rabbitmqcommonschema', name: 'sear-rabbitmq-common-schema-definitions', version: '1.10.0']

libraries.spring_boot_autoconfigure = [group: 'org.springframework.boot', name: 'spring-boot-autoconfigure']
libraries.spring_boot_starter_actuator = [group: 'org.springframework.boot', name: 'spring-boot-starter-actuator']
libraries.spring_boot_starter_amqp = [group: 'org.springframework.boot', name: 'spring-boot-starter-amqp']
libraries.spring_boot_starter_logging = [group: 'org.springframework.boot', name: 'spring-boot-starter-logging']
libraries.spring_boot_starter_undertow = [group: 'org.springframework.boot', name: 'spring-boot-starter-undertow']
libraries.spring_boot_starter_web = [group: 'org.springframework.boot', name: 'spring-boot-starter-web']
libraries.spring_cloud_starter_sleuth = [group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth']
libraries.spring_cloud_dependencies = [group: 'org.springframework.cloud', name: 'spring-cloud-dependencies']
libraries.spring_cloud_consul_discovery = [group: 'org.springframework.cloud', name: 'spring-cloud-consul-discovery']
libraries.spring_cloud_starter_consul_config = [group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-config']

libraries.hibernate_validator = [group: 'org.hibernate.validator', name:'hibernate-validator']
libraries.jakarta_validation_api = [group: 'jakarta.validation', name: 'jakarta.validation-api']

libraries.spring_test = [group: 'org.springframework', name: 'spring-test']
libraries.spring_boot_test = [group: 'org.springframework.boot', name: 'spring-boot-test']
libraries.spring_boot_test_autoconfigure = [group: 'org.springframework.boot', name: 'spring-boot-test-autoconfigure']
libraries.groovy_all = [group: 'org.codehaus.groovy', name: 'groovy-all', version: groovyVersion]
libraries.junit_jupiter_api = [group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion]
libraries.junit_jupiter_engine = [group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion]
libraries.junit_jupiter_testcontainers = [group: 'org.testcontainers', name: 'junit-jupiter', version: testContainersVersion]
libraries.mockito_core = [group: 'org.mockito', name: 'mockito-core', version: mockitoVersion]
libraries.mockito_junit_jupiter = [group: 'org.mockito', name: 'mockito-junit-jupiter', version: mockitoVersion]
libraries.spock_core = [group: 'org.spockframework', name: 'spock-core', version: spockVersion]
libraries.spock_spring = [group: 'org.spockframework', name: 'spock-spring', version: spockVersion]
libraries.testcontainers_rabbitmq = [group: 'org.testcontainers', name: 'rabbitmq', version: testContainersVersion]
libraries.testcontainers_spock = [group: 'org.testcontainers', name: 'spock', version: testContainersVersion]

// GRPC
libraries.grpc_client_spring_boot_starter = [group: 'net.devh', name: 'grpc-client-spring-boot-starter']
libraries.grpc_brave_instrumentation = [group: 'io.zipkin.brave', name: 'brave-instrumentation-grpc']

libraries.vavr = [group: 'io.vavr', name: 'vavr', version: '0.10.4']
libraries.json_path = [group: 'com.jayway.jsonpath', name: 'json-path', version: '2.7.0']

dependencies {
  implementation platform("com.silenteight.sep:sep-dependencies:$sepDependenciesVersion")
  annotationProcessor platform("com.silenteight.sep:sep-dependencies:$sepDependenciesVersion")
  implementation platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
  annotationProcessor platform(
      "org.springframework.boot:spring-boot-dependencies:$springBootVersion")
  implementation platform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")
}

test {
  useJUnitPlatform()
}
