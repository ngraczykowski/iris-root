server:
  port: {{ env "NOMAD_PORT_http" }}

spring:
  rabbitmq:
    addresses: {{ range $index, $rabbit := service "amqp.rabbitmq" -}}
      {{ if $index }},{{ end -}}
      {{ $rabbit.Address }}:{{ $rabbit.Port -}}
{{- end }}
    # NOTE(ahaczewski): Intentionally left empty.
    host:
    virtual-host: /{{ env "NOMAD_NAMESPACE" }}
  cloud:
    consul:
      enabled: true
      host: localhost
      port: 8500
      scheme: http
      discovery:
        enabled: true
        register: false
        register-health-check: false
        catalog-services-watch:
          enabled: true
      service-registry:
        auto-registration:
          enabled: false

warehouse:
  migration:
    enabled: false
  alert-level-security:
    enabled: false
  persistence:
    alert:
      labels:
        - "s8_lobCountryCode"
      recommendation-date-field: "recommendationDate"

  db:
    name: {{ env "NOMAD_NAMESPACE" }}-warehouse
{{- $nomad_namespace := env "NOMAD_NAMESPACE" -}}
{{- with service (print $nomad_namespace "-warehouse-db") }}
    host: {{ (index . 0).Address }}
    port: {{ (index . 0).Port }}
  {{ end -}}
  minio:
    url: https://minio.silenteight.com
  retention:
    alert:
      batch-size: 1000
  sampling:
    filters:
      - name: alert_s8_recommendation
        values: ACTION_FALSE_POSITIVE
  task:
    async:
      execution:
        pool:
          core-size: 4
          max-size: 16
          queue-capacity: 50
          thread-name-prefix: async-auth-aware-

keycloak:
  client-id: {{ env "NOMAD_NAMESPACE" }}-frontend
  adapter:
    auth-server-url: https://auth.silenteight.com
    realm: sens-webapp
    public-client: false
    confidential-port: 0
    principal-attribute: preferred_username
    ssl-required: external

grpc:
  logging:
    enabled: true
  server:
    port: {{ env "NOMAD_PORT_grpc" }}

warehouse.report.statistics:
  all-alerts-query:
    SELECT count(*)
    FROM warehouse_simulation_alert
    WHERE analysis_name = ?
  solved-alerts-query:
    SELECT count(*)
    FROM warehouse_simulation_alert
    WHERE analysis_name = ?
    AND (payload ->> 'recommendation_recommended_action')
    IN ('ACTION_FALSE_POSITIVE', 'ACTION_POTENTIAL_TRUE_POSITIVE')
  ai-false-positive-query:
    SELECT count(*)
    FROM warehouse_simulation_alert wsa
    JOIN warehouse_alert wa ON wsa.name = wa.name
    WHERE wsa.analysis_name = ?
    AND (wa.payload ->> 'analystDecision') IN ('ANALYST_FALSE_POSITIVE', 'ANALYST_TRUE_POSITIVE')
    AND (wsa.payload ->> 'recommendation_recommended_action') = 'ACTION_FALSE_POSITIVE'
  analyst-false-positive-query:
    SELECT count(*)
    FROM warehouse_simulation_alert wsa
    JOIN warehouse_alert wa ON wsa.name = wa.name
    WHERE wsa.analysis_name = ?
    AND (wa.payload ->> 'analystDecision') = 'ANALYST_FALSE_POSITIVE'
    AND (wsa.payload ->> 'recommendation_recommended_action') = 'ACTION_FALSE_POSITIVE'

warehouse.report.zip:
  enabled: true
  rowsLimit: 10

warehouse.reports.v2:
  reports:
    - name: RB_SCORER
      type: production
      description: RB Scorer (Match level)
      selectSqlQuery: >
        SELECT wm.payload ->> 'policyId'                      AS "Policy ID",
               wm.payload ->> 'policyTitle'                   AS "Policy Name",
               wm.payload ->> 'stepId'                        AS "Step ID",
               wm.payload ->> 'stepTitle'                     AS "Step Name",
               wm.payload ->> 'fvSignature'                   AS "Reasoning Branch ID",
               wm.payload ->> 's8_recommendation'             AS "S8 Hit Resolution",
               COUNT(wm.payload ->> 'fvSignature')            AS "Total Hits Count",
               wm.payload ->> 'categories/customerType'       AS "Customer Type",
               wm.payload ->> 'categories/isDeny'             AS "Sanctions",
               wa.payload ->> 'features/name:solution'        AS "Name",
               wa.payload ->> 'features/date:solution'        AS "Date of Birth / Incorporation",
               wa.payload ->> 'features/nationalId:solution'  AS "National ID",
               wa.payload ->> 'features/passport:solution'    AS "Passport Number Document",
               wa.payload ->> 'features/document:solution'    AS "Other Document",
               wa.payload ->> 'features/gender:solution'      AS "Gender",
               wa.payload ->> 'features/nationality:solution' AS "Nationality Country",
               wa.payload ->> 'features/residency:solution'   AS "Residency Country"
        FROM warehouse_alert wa
        JOIN warehouse_match wm ON wa.id = wm.alert_id
        WHERE wa.recommendation_date BETWEEN TIMESTAMP '${from}' AND TIMESTAMP '${to}'
        GROUP BY wm.payload ->> 'policyId',
                 wm.payload ->> 'policyTitle',
                 wm.payload ->> 'stepId',
                 wm.payload ->> 'stepTitle',
                 wm.payload ->> 'fvSignature',
                 wa.payload ->> 's8_recommendation',
                 wm.payload ->> 'categories/customerType',
                 wm.payload ->> 'categories/isDeny',
                 wa.payload ->> 'features/name:solution',
                 wa.payload ->> 'features/date:solution',
                 wa.payload ->> 'features/nationalId:solution',
                 wa.payload ->> 'features/passport:solution',
                 wa.payload ->> 'features/document:solution',
                 wa.payload ->> 'features/gender:solution',
                 wa.payload ->> 'features/nationality:solution',
                 wa.payload ->> 'features/residency:solution'

    - name: RB_SCORER_MATCH_LEVEL
      type: simulation
      description: RB Scorer
      selectSqlQuery: >
        
        WITH tmp_match_count AS (
            SELECT alert_name          AS alert_name,
                   COUNT(alert_name)   AS alert_name
            FROM warehouse_simulation_match
            WHERE analysis_name = 'analysis/${analysisId}'
            GROUP BY alert_name
        )
        
        SELECT wsm.payload ->> 'match_reason:policy'                          AS "Policy ID",
               wsm.payload ->> 'match_reason:policy_title'                    AS "Policy Name",
               wsm.payload ->> 'match_reason:step'                            AS "Step ID",
               wsm.payload ->> 'match_reason:step_title'                      AS "Step Name",
               wsm.payload ->> 'match_reason:feature_vector_signature'        AS "Reasoning Branch ID",
               wsm.payload ->> 'match_solution'                               AS "S8 Hit Resolution",
               COUNT(wsm.payload ->> 'match_reason:feature_vector_signature') AS "Total Hits Count",
               COUNT(tmc.hit_count) FILTER ( WHERE hit_count = 1 )            AS "Single Hits Count",
               wsm.payload ->> 'categories/customerType:value'                AS "Customer Type",
               wsm.payload ->> 'categories/isDeny:value'                      AS "Sanctions",
               wsm.payload ->> 'features/name:solution'                       AS "Name",
               wsm.payload ->> 'features/date:solution'                       AS "Date of Birth / Incorporation",
               wsm.payload ->> 'features/nationalId:solution'                 AS "National ID",
               wsm.payload ->> 'features/passport:solution'                   AS "Passport Number Document",
               wsm.payload ->> 'features/document:solution'                   AS "Other Document",
               wsm.payload ->> 'features/gender:solution'                     AS "Gender",
               wsm.payload ->> 'features/nationality:solution'                AS "Nationality Country",
               wsm.payload ->> 'features/residency:solution'                  AS "Residency Country"
        FROM warehouse_simulation_match wsm
          JOIN tmp_match_count tmc ON wsm.alert_name = tmc.alert_name
        WHERE wsa.analysis_name = 'analysis/${analysisId}'
        GROUP BY wsm.payload ->> 'match_reason:policy',
                 wsm.payload ->> 'match_reason:policy_title',
                 wsm.payload ->> 'match_reason:step',
                 wsm.payload ->> 'match_reason:step_title',
                 wsm.payload ->> 'match_reason:feature_vector_signature',
                 wsm.payload ->> 'match_solution',
                 wsm.payload ->> 'categories/customerType:value',
                 wsm.payload ->> 'categories/isDeny:value',
                 wsm.payload ->> 'features/name:solution',
                 wsm.payload ->> 'features/date:solution',
                 wsm.payload ->> 'features/nationalId:solution',
                 wsm.payload ->> 'features/passport:solution',
                 wsm.payload ->> 'features/document:solution',
                 wsm.payload ->> 'features/gender:solution',
                 wsm.payload ->> 'features/nationality:solution',
                 wsm.payload ->> 'features/residency:solution'

    - name: AI_REASONING
      type: production
      description: AI Reasoning (Alert Level)
      selectSqlQuery: >
        SELECT wa.discriminator                               AS "S8 Alert ID",
               wa.payload ->> 'clientId'                      AS "Client Alert ID",
               STRING_AGG(wm.payload ->> 'watchListId', ', ') AS "Watchlist Hit IDs",
               wa.payload ->> 'policyId'                      AS "Policy ID",
               wa.payload ->> 'policyTitle'                   AS "Policy Name",
               STRING_AGG(wm.payload ->> 'stepId', ', ')      AS "Step IDs",
               STRING_AGG(wm.payload ->> 'stepTitle', ', ')   AS "Step Names",
               STRING_AGG(wm.payload ->> 'fvSignature', ', ') AS "Reasoning Branch IDs",
               wa.payload ->> 'batchId'                       AS "Batch ID",
               wa.payload ->> 'batchType'                     AS "Batch Type",
               wa.payload ->> 'batchCountry'                  AS "Origin Country",
               wa.payload ->> 'batchWatchList'                AS "Watchlist Type",
               wa.payload ->> 'sourceSystemIdentifier'        AS "Source System ID",
               wa.payload ->> 's8Recommendation'              AS "S8 Alert Resolution",
               wa.payload ->> 's8ReadTimestamp'               AS "S8 Read Timestamp",
               wa.payload ->> 'recommendationDate'            AS "S8 Resolution Timestamp",
               wa.payload ->> 'comment'                       AS "S8 Alert Reason"
        FROM warehouse_alert wa
        JOIN warehouse_match wm ON wa.id = wm.alert_id
        WHERE wa.created_at BETWEEN TIMESTAMP '${from}' AND TIMESTAMP '${to}'
        GROUP BY wa.discriminator,
                 wa.payload ->> 'clientId',
                 wa.payload ->> 'policyId',
                 wa.payload ->> 'policyTitle',
                 wa.payload ->> 'batchId',
                 wa.payload ->> 'batchType',
                 wa.payload ->> 'batchCountry',
                 wa.payload ->> 'batchWatchList',
                 wa.payload ->> 'sourceSystemIdentifier',
                 wa.payload ->> 's8Recommendation',
                 wa.payload ->> 's8ReadTimestamp',
                 wa.payload ->> 'recommendationDate',
                 wa.payload ->> 'comment'

    - name: AI_REASONING_MATCH_LEVEL
      type: production
      description: AI Reasoning (Match Level)
      selectSqlQuery: >
        SELECT wa.discriminator                        AS "S8 Alert ID",
               wa.payload ->> 'clientId'               AS "Client Alert ID",
               wm.payload ->> 'watchListId'            AS "Watchlist Hit ID",
               wa.payload ->> 'policyId'               AS "Policy ID",
               wa.payload ->> 'policyTitle'            AS "Policy Name",
               wm.payload ->> 'stepId'                 AS "Step ID",
               wm.payload ->> 'stepTitle'              AS "Step Name",
               wm.payload ->> 'fvSignature'            AS "Reasoning Branch ID",
               wa.payload ->> 'batchId'                AS "Batch ID",
               wa.payload ->> 'batchType'              AS "Batch Type",
               wa.payload ->> 'batchCountry'           AS "Origin Country",
               wa.payload ->> 'batchWatchList'         AS "Watchlist Type",
               wa.payload ->> 'sourceSystemIdentifier' AS "Source System ID",
               wm.payload ->> 's8Recommendation'       AS "S8 Hit Resolution",
               wa.payload ->> 's8ReadTimestamp'        AS "S8 Read Timestamp",
               wa.payload ->> 'recommendationDate'     AS "S8 Resolution Timestamp",
               wm.payload ->> 's8Reason'               AS "S8 Hit Reason",
               wa.payload ->> 's8Recommendation'       AS "S8 Alert Resolution"
        FROM warehouse_alert wa
        JOIN warehouse_match wm ON wa.id = wm.alert_id
        WHERE wa.recommendation_date BETWEEN TIMESTAMP '${from}' AND TIMESTAMP '${to}'

    - name: AI_REASONING_MATCH_LEVEL
      type: simulation
      description: AI Reasoning
      selectSqlQuery: >
        SELECT wa.discriminator                                        AS "S8 Alert ID",
               wa.payload ->> 'clientId'                               AS "Client Alert ID",
               wsm.payload ->> 'watchListId'                           AS "Watchlist Hit ID",
               wsm.payload ->> 'match_reason:policy'                   AS "Policy ID",
               wsm.payload ->> 'match_reason:policy_title'             AS "Policy Name",
               wsm.payload ->> 'match_reason:step'                     AS "Step ID",
               wsm.payload ->> 'match_reason:step_title'               AS "Step Name",
               wsm.payload ->> 'match_reason:feature_vector_signature' AS "Reasoning Branch ID",
               wa.payload ->> 'batchId'                                AS "Batch ID",
               wa.payload ->> 'batchType'                              AS "Batch Type",
               wa.payload ->> 'batchCountry'                           AS "Origin Country",
               wa.payload ->> 'batchWatchList'                         AS "Watchlist Type",
               wa.payload ->> 'sourceSystemIdentifier'                 AS "Source System ID",
               wsa.payload ->> 'recommendation_recommended_action'     AS "S8 Hit Resolution",
               wa.payload ->> 's8ReadTimestamp'                        AS "S8 Read Timestamp",
               wsa.payload ->> 'recommendation_create_time'            AS "S8 Resolution Timestamp",
               wsa.payload ->> 'recommendation_comment'                AS "S8 Hit Reason"
        FROM warehouse_simulation_alert wsa
          JOIN warehouse_alert wa ON wsa.name = wa.name
          JOIN warehouse_simulation_match wsm ON wsm.alert_name = wsa.name
        WHERE wsa.analysis_name = 'analysis/${analysisId}'
          AND wsm.analysis_name = 'analysis/${analysisId}'

    - name: ACCURACY_ALERT_LEVEL
      type: production
      description: Accuracy (Alert Level)
      selectSqlQuery: >
        SELECT wa.discriminator                                 AS "S8 Alert ID",
               wa.payload ->> 'clientId'                        AS "Client Alert ID",
               STRING_AGG(wm.payload ->> 'watchListId', ', ')   AS "Watchlist Hit IDs",
               wa.payload ->> 'policyId'                        AS "Policy ID",
               wa.payload ->> 'policyTitle'                     AS "Policy Name",
               STRING_AGG(wm.payload ->> 'stepId', ', ')        AS "Step IDs",
               STRING_AGG(wm.payload ->> 'stepTitle', ', ')     AS "Step Names",
               STRING_AGG(wm.payload ->> 'fvSignature', ', ')   AS "Reasoning Branch IDs",
               wa.payload ->> 'batchId'                         AS "Batch Id",
               wa.payload ->> 'batchType'                       AS "Batch Type",
               wa.payload ->> 'batchCountry'                    AS "Origin Country",
               wa.payload ->> 'batchWatchList'                  AS "Watchlist Type",
               wa.payload ->> 's8Recommendation'                AS "S8 Alert Resolution",
               wa.payload ->> 'recommendationDate'              AS "S8 Resolution Timestamp",
               wa.payload ->> 'comment'                         AS "S8 Alert Reason",
               wa.payload ->> 'analystDecision'                 AS "Analyst Alert Decision",
               wa.payload ->> 'analystDecisionModifiedDateTime' AS "Analyst Alert Decision Timestamp",
               wa.payload ->> 'analystReason'                   AS "Analyst Alert Reason"
        FROM warehouse_alert wa
                 JOIN warehouse_match wm ON wa.id = wm.alert_id
        WHERE wa.recommendation_date BETWEEN TIMESTAMP '${from}' AND TIMESTAMP '${to}'
          AND wa.payload ->> 'analystDecision' != ''
        GROUP BY wa.discriminator,
                 wa.payload ->> 'clientId',
                 wa.payload ->> 'policyId',
                 wa.payload ->> 'policyTitle',
                 wa.payload ->> 'batchId',
                 wa.payload ->> 'batchType',
                 wa.payload ->> 'batchCountry',
                 wa.payload ->> 'batchWatchList',
                 wa.payload ->> 's8Recommendation',
                 wa.payload ->> 'recommendationDate',
                 wa.payload ->> 'comment',
                 wa.payload ->> 'analystDecision',
                 wa.payload ->> 'analystDecisionModifiedDateTime',
                 wa.payload ->> 'analystReason'

    - name: ACCURACY_MATCH_LEVEL
      type: production
      description: Accuracy (Match Level)
      selectSqlQuery: >
        SELECT wa.discriminator                                 AS "S8 Alert ID",
               wa.payload ->> 'clientId'                        AS "Client Alert ID",
               wm.payload ->> 'watchListId'                     AS "Watchlist Hit ID",
               wa.payload ->> 'policyId'                        AS "Policy ID",
               wa.payload ->> 'policyTitle'                     AS "Policy Name",
               wm.payload ->> 'stepId'                          AS "Step ID",
               wm.payload ->> 'stepTitle'                       AS "Step Name",
               wm.payload ->> 'fvSignature'                     AS "Reasoning Branch ID",
               wa.payload ->> 'batchId'                         AS "Batch Id",
               wa.payload ->> 'batchType'                       AS "Batch Type",
               wa.payload ->> 'batchCountry'                    AS "Origin Country",
               wa.payload ->> 'batchWatchList'                  AS "Watchlist Type",
               wm.payload ->> 's8Recommendation'                AS "S8 Hit Resolution",
               wa.payload ->> 'recommendationDate'              AS "S8 Resolution Timestamp",
               wm.payload ->> 's8Reason'                        AS "S8 Hit Reason"
        FROM warehouse_alert wa
                 JOIN warehouse_match wm ON wa.id = wm.alert_id
        WHERE wa.recommendation_date BETWEEN TIMESTAMP '${from}' AND TIMESTAMP '${to}'
          AND wa.payload ->> 'analystDecision' != ''

    - name: ACCURACY_MATCH_LEVEL
      type: simulation
      description: Accuracy
      selectSqlQuery: >
        SELECT wa.discriminator                                        AS "S8 Alert ID",
               wsm.payload ->> 'clientId'                              AS "Client Alert ID",
               wsm.payload ->> 'watchListId'                           AS "Watchlist Hit ID",
               wsm.payload ->> 'match_reason:policy'                   AS "Policy ID",
               wsm.payload ->> 'match_reason:policy_title'             AS "Policy Name",
               wsm.payload ->> 'match_reason:step'                     AS "Step ID",
               wsm.payload ->> 'match_reason:step_title'               AS "Step Name",
               wsm.payload ->> 'match_reason:feature_vector_signature' AS "Reasoning Branch ID",
               wa.payload ->> 'batchId'                                AS "Batch Id",
               wa.payload ->> 'batchType'                              AS "Batch Type",
               wa.payload ->> 'batchCountry'                           AS "Origin Country",
               wa.payload ->> 'batchWatchList'                         AS "Watchlist Type",
               wsa.payload ->> 'recommendation_recommended_action'     AS "S8 Hit Resolution",
               wsa.payload ->> 'recommendation_create_time'            AS "S8 Resolution Timestamp",
               wsa.payload ->> 'recommendation_comment'                AS "S8 Hit Reason"
        FROM warehouse_simulation_alert wsa
          JOIN warehouse_alert wa ON wsa.name = wa.name
          JOIN warehouse_simulation_match wsm ON wsm.alert_name = wsa.name
        WHERE wsa.analysis_name = 'analysis/${analysisId}'
          AND wsm.analysis_name = 'analysis/${analysisId}'
          AND wm.payload ->> 'analystDecision' IN
              ('ANALYST_FALSE_POSITIVE', 'ANALYST_TRUE_POSITIVE')
