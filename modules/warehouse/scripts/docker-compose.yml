version: '3'

services:
  odfe-node1:
    build: ./es
    container_name: warehouse-es1
    environment:
      - opendistro_security.ssl.http.enabled=false
      - cluster.name=odfe-cluster
      - node.name=odfe-node1
      - discovery.seed_hosts=odfe-node1,odfe-node2
      - cluster.initial_master_nodes=odfe-node1,odfe-node2
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - path.repo=/usr/share/elasticsearch/snapshot
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=admin123
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the Elasticsearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - warehouse-es1:/usr/share/elasticsearch/data
      - ./es/internal_users.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml:ro
      - ./es/roles_mapping.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/roles_mapping.yml:ro
      - ./es/roles.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/roles.yml:ro
      - warehouse-snapshot-storage:/usr/share/elasticsearch/snapshot

    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    networks:
      - odfe-net
  odfe-node2:
    build: ./es
    container_name: warehouse-es2
    environment:
      - opendistro_security.ssl.http.enabled=false
      - cluster.name=odfe-cluster
      - node.name=odfe-node2
      - discovery.seed_hosts=odfe-node1,odfe-node2
      - cluster.initial_master_nodes=odfe-node1,odfe-node2
      - bootstrap.memory_lock=true
      - path.repo=/usr/share/elasticsearch/snapshot
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=admin123
      - AWS_DEFAULT_REGION=US_EAST_1
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - warehouse-es2:/usr/share/elasticsearch/data
      - ./es/internal_users.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml:ro
      - ./es/roles_mapping.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/roles_mapping.yml:ro
      - ./es/roles.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/roles.yml:ro
      - warehouse-snapshot-storage:/usr/share/elasticsearch/snapshot
    ports:
      - 9201:9200
      - 9601:9600 # required for Performance Analyzer
    networks:
      - odfe-net
  kibana:
    image: amazon/opendistro-for-elasticsearch-kibana:1.13.1
    container_name: warehouse-kibana
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: http://odfe-node1:9200
      ELASTICSEARCH_HOSTS: http://odfe-node1:9200
    networks:
      - odfe-net
  minio:
    image: minio/minio:RELEASE.2021-03-10T05-11-33Z
    container_name: warehouse-minio
    volumes:
      - minio-fs:/data1
    ports:
      - 9000:9000
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    command: server /data1
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - odfe-net
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 admin admin123;
      /usr/bin/mc mb --ignore-existing myminio/reports;
      /usr/bin/mc mb --ignore-existing myminio/snapshots;
      exit 0;
      "
    networks:
      - odfe-net
  db:
    image: docker.io/library/postgres:12
    container_name: warehouse-db
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-24910}:5432"
    environment:
      POSTGRES_DB: "${POSTGRES_DB:-warehouse}"
      POSTGRES_USER: "${POSTGRES_USER:-warehouse}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-warehouse}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - warehouse-storage:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 1G
    command:
      - "postgres"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"

volumes:
  warehouse-es1:
  warehouse-es2:
  minio-fs:
  warehouse-storage:
  warehouse-snapshot-storage:
networks:
  odfe-net:
