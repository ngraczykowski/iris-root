spring:
  application:
    name: warehouse
  datasource:
    # Hikari pool configuration
    hikari:
      pool-name: Database-Pool
      minimum-idle: ${warehouse.db.connections.min:1}
      maximum-pool-size: ${warehouse.db.connections.max:10}
      auto-commit: false
      schema: ${warehouse.db.schema:public}
      isolate-internal-queries: true
      # NOTE(ahaczewski): Forces HikariCP to commit the transaction after opening fresh connection.
      #  Without it, the connection transaction is left in OPEN state instead of IDLE, because
      #  just before HikariCP runs `SET SESSION search_path TO '${ae.db.schema}'` which begins
      #  transaction. Thus, with that query as workaround, we force the transaction commit.
      connection-init-sql: SELECT 1
      data-source-properties:
        ApplicationName: Warehouse

  # Database migrations
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: ${warehouse.db.schema:public}
    contexts: default
