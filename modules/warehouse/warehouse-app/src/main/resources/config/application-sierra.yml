warehouse:
  persistence:
    alert:
      labels:
      recommendation-date-field: "alert_create_time"
  sampling:
    time-field-name: alert_create_time

  indexer.diagnostic.enabled: true
  retention:
    alert:
      batch-size: 1000
    simulation:
      analysis-expired:
        fields-to-erase:
          - 'alert_recommendation_comment'
          - 'alert_firco_analyst_comment'

warehouse.messaging:
  broker:
    alert-production-indexing:
      queue-name: wh.prioritized-index-request.production
      routing-key: command.index-request.production
      max-priority: 10
    to-remove:
      bindings:
        - queue-name: wh.index-request.production
          exchange: bridge.command
          routing-key: command.index-request.production

warehouse.report.statistics:
  date-field-name: index_timestamp
  ai-decision:
    field: alert_recommendation_recommended_action
    significant-values: [ACTION_FALSE_POSITIVE, ACTION_POTENTIAL_TRUE_POSITIVE]
    false-positive-value: ACTION_FALSE_POSITIVE
  analyst-decision:
    field: alert_firco_analyst_decision
    analyst-significant-values: [analyst_decision_true_positive, analyst_decision_false_positive]
    false-positive-value: analyst_decision_false_positive

warehouse.reports.v2:
  reports:
    - name: RB_SCORER
      type: production
      description: Reasoning Branch Scorer (Match Level)
      selectSqlQuery: >
        SELECT (wm.payload ->> 'feature_vector_signature') AS "Reasoning Branch ID",
               (wm.payload ->> 'policy_title') AS "Policy Name",
               (wm.payload ->> 'policy') AS "Policy ID",
               (wm.payload ->> 'step') AS "Step ID",
               (wm.payload ->> 'step_title') AS "Step Name",
               (wm.payload ->> 'solution') AS "S8 Alert Resolution",
               (wm.payload ->> 'category_values_categories/matchType') AS "Match Type",
               (wm.payload ->> 'feature_values_features/nameMatchedText') AS "Name",
               (wm.payload ->> 'feature_values_features/geo') AS "Geo",
               (wm.payload ->> 'feature_values_features/geo2') AS "Geo v2",
               (wm.payload ->> 'category_values_categories/watchlistType') AS "Watchlist Type",
               (wm.payload ->> 'feature_values_features/nameMatchedText') AS "Name Matched Text",
               (wm.payload ->> 'category_values_categories/crossmatch') AS "Name vs Address Crossmatch",
               (wm.payload ->> 'category_values_categories/specificTerms') AS "Specific Terms",
               (wm.payload ->> 'category_values_categories/specificTerms2') AS "Specific Terms v2",
               (wm.payload ->> 'category_values_categories/messageStructure') AS "Message Structure",
               (wm.payload ->> 'category_values_categories/historicalRiskAssessment') AS "Historical Risk Assessment",
               (wm.payload ->> 'feature_values_features/historicalRiskCustomerName') AS "Historical Risk - Customer Name",
               (wm.payload ->> 'feature_values_features/historicalRiskAccountNumber') AS "Historical Risk - Account Number",
               (wm.payload ->> 'feature_values_features/organizationName') AS "Organization Name",
               (wm.payload ->> 'feature_values_features/organizationName2') AS "Organization Name v2",
               (wm.payload ->> 'category_values_categories/companyNameSurrounding') AS "Company Name Surrounding",
               count(wm.payload ->> 'feature_vector_signature') AS "Hits Count"
        FROM warehouse_alert wa JOIN warehouse_match wm ON wa.id = wm.alert_id where wa.recommendation_date BETWEEN DATE '${from}' AND DATE '${to}'
        GROUP BY (wm.payload ->> 'feature_vector_signature'),
               (wm.payload ->> 'policy_title'),
               (wm.payload ->> 'policy'),
               (wm.payload ->> 'step'),
               (wm.payload ->> 'step_title'),
               (wm.payload ->> 'solution'),
               (wm.payload ->> 'category_values_categories/matchType'),
               (wm.payload ->> 'feature_values_features/nameMatchedText'),
               (wm.payload ->> 'feature_values_features/geo'),
               (wm.payload ->> 'feature_values_features/geo2'),
               (wm.payload ->> 'category_values_categories/watchlistType'),
               (wm.payload ->> 'feature_values_features/nameMatchedText'),
               (wm.payload ->> 'category_values_categories/crossmatch'),
               (wm.payload ->> 'category_values_categories/specificTerms'),
               (wm.payload ->> 'category_values_categories/specificTerms2'),
               (wm.payload ->> 'category_values_categories/messageStructure'),
               (wm.payload ->> 'category_values_categories/historicalRiskAssessment'),
               (wm.payload ->> 'feature_values_features/historicalRiskCustomerName'),
               (wm.payload ->> 'feature_values_features/historicalRiskAccountNumber'),
               (wm.payload ->> 'feature_values_features/organizationName'),
               (wm.payload ->> 'feature_values_features/organizationName2'),
               (wm.payload ->> 'category_values_categories/companyNameSurrounding')
    - name: AI_REASONING
      type: production
      description: AI Reasoning (Alert Level)
      selectSqlQuery: >
        SELECT DISTINCT (wm.payload ->> 'policy') AS "Policy ID",
               (wm.payload ->> 'policy_title') AS "Policy Name",
               (wa.payload ->> 'recommended_action') AS "S8 Alert Resolution",
               recommendation_date AS "S8 Alert Resolution Timestamp (UTC)",
               (wa.payload ->> 'recommendation_comment') AS "S8 Alert Comment",
               (wa.payload ->> 'firco_system_id') AS "Client Alert ID",
               (wa.payload ->> 'status') AS "Alert Status",
               (wa.payload ->> 'firco_analyst_decision') AS "Analyst Decision",
               wa.name AS "S8 Alert ID"
        from warehouse_alert wa JOIN warehouse_match wm ON wa.id = wm.alert_id 
        WHERE wa.recommendation_date BETWEEN DATE '${from}' AND DATE '${to}'
    - name: AI_REASONING_MATCH_LEVEL
      type: production
      description: AI Reasoning (Match Level)
      selectSqlQuery: >
        SELECT (wm.payload ->> 'feature_vector_signature') AS "Reasoning Branch ID",
                        (wm.payload ->> 'policy') AS "Policy ID",
                        (wm.payload ->> 'policy_title') AS "Policy Name",
                        (wm.payload ->> 'step') AS "Step ID",
                        (wm.payload ->> 'step_title') AS "Step Name",
                        (wm.payload ->> 'solution') AS "S8 Match Resolution",
                        (wa.payload ->> 'recommended_action') AS "S8 Alert Resolution",
                        recommendation_date AS "S8 Alert Resolution Timestamp (UTC)",
                        (wa.payload ->> 'recommendation_comment') AS "S8 Alert Comment",
                        (wa.payload ->> 'firco_system_id') AS "Client Alert ID",
                        (wa.payload ->> 'firco_analyst_decision') AS "Analyst Decision",
                        (wa.payload ->> 'status') AS "Alert Status",
                        (wa.payload ->> 'delivery_status') AS "Alert Delivery Status",
                        wm.name AS "S8 Match ID"
        FROM warehouse_alert wa JOIN warehouse_match wm ON wa.id = wm.alert_id 
        WHERE wa.recommendation_date BETWEEN DATE '${from}' AND DATE '${to}'
    - name: ACCURACY
      type: production
      description: Accuracy (Alert Level)
      selectSqlQuery: >
        SELECT DISTINCT (wm.payload ->> 'policy') AS "Policy ID",
                        (wm.payload ->> 'policy_title') AS "Policy Name",
                        (wa.payload ->> 'recommended_action') AS "S8 Alert Resolution",
                        recommendation_date AS "S8 Alert Resolution Timestamp (UTC)",
                        (wa.payload ->> 'recommendation_comment') AS "S8 Alert Comment",
                        (wa.payload ->> 'firco_analyst_decision') AS "Analyst Decision",
                        (wa.payload ->> 'firco_analyst_decision_time') AS "Analyst Decision Timestamp",
                        (wa.payload ->> 'firco_analyst_comment') AS "Analyst Comment",
                        (wa.payload ->> 'firco_system_id') AS "Client Alert ID",
                        (wa.payload ->> 'status') AS "Alert Status",
                        wa.name AS "S8 Alert ID"
        FROM warehouse_alert wa JOIN warehouse_match wm ON wa.id = wm.alert_id 
        WHERE wa.recommendation_date BETWEEN DATE '${from}' AND DATE '${to}'