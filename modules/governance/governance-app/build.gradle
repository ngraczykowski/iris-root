plugins {
  id "groovy"
  id "com.google.cloud.tools.jib"
  id "com.silenteight.iris.build.spring-boot-application"
}

description = "Governance Application"

dependencies {
  implementation project(":governance-agent")
  implementation project(":governance-change-request")
  implementation project(":governance-common-web")
  implementation project(":governance-common-web-testing")
  implementation project(":governance-db-changelog")
  implementation project(":governance-feature-vector")
  implementation project(":governance-file")
  implementation project(":governance-model")
  implementation project(":governance-policy")
  implementation project(":governance-qa")
  implementation project(":governance-strategy")

  implementation libs.commons.collections

  implementation libs.silenteight.audit.bs
  implementation libs.silenteight.commons.app
  implementation libs.silenteight.filestorage.minio
  implementation libs.silenteight.sep.base.common
  implementation libs.silenteight.sep.base.testing
  implementation libs.silenteight.serp.protocol.base

  implementation libs.spring.boot.starter.actuator
  implementation libs.spring.boot.starter.undertow
  implementation libs.spring.boot.starter.web

  implementation libs.spring.context.support
  implementation libs.spring.security.config
  implementation libs.spring.security.web
  implementation libs.spring.cloud.consul.discovery
  implementation libs.spring.cloud.starter.consul.config
  implementation libs.spring.integration.mail

  implementation libs.commons.lang3

  implementation libs.protobuf.java.util
  implementation libs.grpc.api
  implementation libs.grpc.stub

  implementation libs.jaxb.api

  // ANO: jackson.module.kotlin can be removed once spring and or jackson is bumped
  // kotlin is required by minio
  // https://stackoverflow.com/questions/67630048/springboot-2-5-0-for-jackson-kotlin-classes-support-please-add-com-fasterxml-ja
  implementation libs.jackson.module.kotlin

  implementation libs.jakarta.inject
  implementation libs.jakarta.mail

  implementation libs.protobuf.java.util

  implementation libs.querydsl.jpa
  implementation libs.ecs.logging.core

  //Sentry
  runtimeOnly libs.sentry.spring.boot.starter
  //having this at runtime ensure sending all ERROR level logs to Sentry
  runtimeOnly libs.sentry.logback

  annotationProcessor(libs.querydsl.apt.jpa) {
    artifact {
      classifier = 'jpa'
    }
  }
  annotationProcessor libs.jakarta.persistence.api
  annotationProcessor libs.jakarta.annotation.api
  annotationProcessor libs.spring.boot.configuration.processor

  testImplementation libs.spock.spring
  testImplementation libs.spring.integration.test

  testImplementation libs.rest.assured.spring.mock.mvc

  aspect libs.silenteight.sep.base.aspects
}

publishing {
  publications {
    bootJava(MavenPublication) {
      artifact bootJar
    }
  }
}
