plugins {
  id "idea"
  id "java-library"
  id "groovy"
  id "maven-publish"
  id "com.silenteight.gradle.wrapper" version "1.0.25"
  id "com.silenteight.gradle.release" version "1.0.9"
  id "com.silenteight.gradle.convention" version "1.17.0"
  id "io.freefair.aspectj" version "5.0.1" apply false
  id "nebula.resolution-rules" version "7.6.0"
  id "org.sonarqube" version "2.8"
  // Spring boot plugin version should be same as Spring version in sep-dependencies
  id "org.springframework.boot" version "2.3.3.RELEASE" apply false
  id "com.google.cloud.tools.jib" version '2.4.0' apply false
}

projectSetup {
  javaVersion = JavaVersion.VERSION_11
}

ext {
  gradleScriptDir = "${rootProject.projectDir}/gradle/scripts"
}

apply from: "${gradleScriptDir}/resolutionRules.gradle"
apply from: "${gradleScriptDir}/dependencies.gradle"

pluginManager.apply "io.freefair.aspectj.post-compile-weaving"

aspectj {
  version = libraries.aspectjtools.version
}

tasks.named(JavaPlugin.COMPILE_JAVA_TASK_NAME).configure {JavaCompile java ->
  def processResources = project.tasks.named(JavaPlugin.PROCESS_RESOURCES_TASK_NAME)

  java.dependsOn processResources
}

def ajcArgs = [
    "-Xlintfile", "${rootProject.projectDir}/Xlint.properties".toString(),
]

tasks.withType(JavaCompile).configureEach {JavaCompile java ->
  java.ajc.options.compilerArgs = ajcArgs
  java.options.fork = true
}

configurations {
  implementation.extendsFrom starterCommon
  implementation.extendsFrom starterDatabase
  implementation.extendsFrom starterGrpc
  implementation.extendsFrom starterIntegration
  implementation.extendsFrom starterMessaging
  implementation.extendsFrom starterSpringApp

  runtimeOnly.extendsFrom starterDatabaseRuntime

  testImplementation.extendsFrom starterSpockTest
  testImplementation.extendsFrom starterSpringTest
}
dependencies {
  annotationProcessor libraries.querydsl_apt_jpa
  annotationProcessor libraries.jakarta_persistence_api
  annotationProcessor libraries.jakarta_annotation_api
  annotationProcessor libraries.spring_boot_configuration_processor

  //This is directly inherited and required for serp-commons
  api libraries.silenteight_sep_base_common
  api libraries.silenteight_sep_base_testing
  api libraries.silenteight_serp_protocol_base
  api libraries.spring_webmvc

  aspect libraries.silenteight_sep_base_aspects

  implementation libraries.commons_lang3
  implementation libraries.grpc_stub
  implementation libraries.jakarta_inject
  implementation libraries.jakarta_mail
  implementation libraries.jaxb_api
  implementation libraries.protobuf_java_util
  implementation libraries.silenteight_audit_bs
  implementation libraries.silenteight_spring_cloud_consul_discovery
  implementation libraries.spring_cloud_starter_consul_config
  implementation libraries.silenteight_audit_bs
  //FIXME: please refer to serp common repository directly when it will be extracted from serp
  // project
  implementation libraries.silenteight_serp_common
  implementation libraries.silenteight_spring_cloud_consul_discovery
  implementation libraries.spring_cloud_starter_consul_config
  implementation libraries.spring_context_support
  implementation libraries.querydsl_jpa

  testImplementation libraries.rest_assured_spring_mock_mvc
  testImplementation libraries.spock_spring
  testImplementation libraries.spring_integration_test
}

