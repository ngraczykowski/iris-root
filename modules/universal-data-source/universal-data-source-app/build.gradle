plugins {
  id "java"
  id "groovy"
  id "com.silenteight.iris.build.spring-boot-application"
  id "com.silenteight.iris.build.container-image"
}

dependencies {
  // Application modules
  implementation project(":universal-data-source-common")

  // Utilities
  implementation libs.commons.lang3
  implementation libs.commons.text
  implementation libs.guava

  // Logging
  runtimeOnly libs.ecs.logging.core
  runtimeOnly libs.logback.ecs.encoder

  // Base libs
  implementation libs.silenteight.sep.base.common
  implementation libs.silenteight.commons.app
  implementation libs.lombok

  // Application Starters
  implementation libs.spring.boot.starter.actuator
  implementation libs.spring.boot.starter.logging
  implementation libs.spring.boot.starter.security
  implementation libs.spring.boot.starter.web
  implementation libs.spring.boot.starter.undertow
  implementation libs.micrometer.prometheus

  // Sentry
  runtimeOnly libs.sentry.spring.boot.starter
  runtimeOnly libs.sentry.logback

// Security
  implementation libs.spring.security.config
  implementation libs.spring.security.core
  implementation libs.spring.security.web

  // Cloud
  implementation libs.spring.cloud.consul.discovery
  implementation libs.spring.cloud.starter.consul.config
  implementation libs.spring.cloud.starter.sleuth

  // Validator
  implementation libs.tomcat.embed.el
  implementation libs.hibernate.validator

  // Jackson
  implementation libs.jackson.annotations
  implementation libs.jackson.databind
  runtimeOnly libs.jackson.datatype.jdk8
  runtimeOnly libs.jackson.datatype.jsr310
  runtimeOnly libs.jackson.module.afterburner
  runtimeOnly libs.jackson.module.paranamer
  runtimeOnly libs.jackson.module.parameter.names

  // Database
  implementation libs.spring.boot.starter.data.jpa
  implementation libs.spring.boot.starter.jdbc
  implementation libs.liquibase.core
  implementation libs.hikari.cp
  runtimeOnly libs.postgresql
  runtimeOnly libs.liquibase.sessionlock

  // Messaging
  implementation libs.amqp.client
  implementation libs.lz4.java
  implementation libs.spring.boot.starter.integration
  implementation libs.spring.integration.amqp
  implementation libs.spring.integration.core
  implementation libs.spring.integration.http
  implementation libs.sear.rabbitmq.common.schema

  // GRPC
  implementation libs.brave.instrumentation.grpc
  implementation libs.grpc.server.spring.boot.starter
  implementation libs.grpc.client.spring.boot.starter

  // AspectJ
  implementation libs.aspectjrt
  aspect libs.silenteight.sep.base.aspects
  compileOnly libs.spring.web
  compileOnly libs.spring.tx

  //  Datasource API
  implementation libs.data.source.api
  implementation libs.data.source.categories.api
  implementation libs.data.source.comments.api
  implementation libs.data.source.agentinput.api

  implementation libs.protobuf.java.util
  implementation libs.data.retention.api

  //  Testing
  testImplementation libs.silenteight.sep.base.testing
  testImplementation libs.adjudication.engine.api
  testImplementation libs.awaitility
  testImplementation libs.hibernate.validator
  testImplementation libs.tomcat.embed.el
}

jar {
  manifest {
    attributes "Main-Class": "com.silenteight.universaldatasource.app.UniversalDataSourceApplication"
  }
}

jib {
  from {
    // NOTE(ahaczewski): Use debug version of the image for SNAPSHOT builds.
    def imageSuffix = ("$version".contains("-BUILD") || "$version".endsWith("-SNAPSHOT")) ?
                      ":debug" : ""
    image = "gcr.io/distroless/java17-debian11" + imageSuffix
  }
  to {
    image = "docker.repo.silenteight.com/uds/${project.name}:${version}"
    if ("$version".contains("-BUILD") || "$version".endsWith("-SNAPSHOT")) {
      tags = ["snapshot"]
    } else {
      tags = ["latest"]
    }
  }
  container {
    appRoot = "/silenteight/app"
    environment = [
        "SILENTEIGHT_HOME"            : "/silenteight",
        "UDS_DB_HOST"                  : "postgres",
        "UDS_DB_PORT"                  : "5432",
        "UDS_DB_NAME"                  : "datasource",
        "UDS_DB_USERNAME"              : "datasource",
        "UDS_DB_PASSWORD"              : "datasource",
        "SPRING_RABBITMQ_ADDRESSES"   : "rabbitmq",
        "SPRING_RABBITMQ_PORT"        : "5672",
        "SPRING_RABBITMQ_USERNAME"    : "dev",
        "SPRING_RABBITMQ_PASSWORD"    : "dev",
        "SPRING_RABBITMQ_VIRTUAL_HOST": "/",
        "SPRING_PROFILES_ACTIVE"      : "",
    ]
    jvmFlags = [
        "-XX:MaxRAMPercentage=75",
        "-Dfile.encoding=UTF-8",
        "-Dsun.jnu.encoding=UTF-8",
        "-Djava.net.preferIPv4Stack=true",
        "-Djava.io.tmpdir=/tmp",
        "-Dsilenteight.home=/silenteight",
        "-Dspring.profiles.include=container",
        "-Dserver.port=8080",
        "-Dgrpc.server.port=9090",
    ]
    ports = ["8080", "9090"]
    user = "nonroot"
    workingDirectory = "/silenteight"
  }
}
