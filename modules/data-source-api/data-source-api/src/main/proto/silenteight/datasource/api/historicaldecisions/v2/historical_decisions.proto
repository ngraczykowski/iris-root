syntax = "proto3";

package silenteight.datasource.api.historicaldecisions.v2;

import "google/api/annotations.proto";

option java_package = "com.silenteight.datasource.api.historicaldecisions.v2";
option java_outer_classname = "HistoricalDecisionsProto";
option java_multiple_files = true;

service HistoricalDecisionsInputService {
  rpc BatchGetMatchHistoricalDecisionsInputs (BatchGetMatchHistoricalDecisionsInputsRequest) returns (stream BatchGetMatchHistoricalDecisionsInputsResponse) {
    option (google.api.http) = {
      post: "/agent-inputs/historicaldecisions/versions/v2/matches:batchGet"
      body: "*"
    };
  }
}

message BatchGetMatchHistoricalDecisionsInputsRequest {
  // The list of matches data is requested for, in form of `alerts/<Alert ID>/matches/<Match ID>`.
  repeated string matches = 1;
  // The list of features the input data for each match is requested, in form of `features/<Feature ID>`.
  repeated string features = 2;
}

message BatchGetMatchHistoricalDecisionsInputsResponse {
  repeated HistoricalDecisionsInput historical_decisions_inputs = 1;
}

message HistoricalDecisionsInput {
  string match = 1;
  repeated HistoricalDecisionsFeatureInput historical_decisions_feature_input = 2;
}

message HistoricalDecisionsFeatureInput {
  string feature = 1;
  ModelKey model_key = 2;
  Discriminator discriminator = 3;
}

message ModelKey {
  oneof type {
    AlertedParty alerted_party = 1;
    WatchlistParty watchlist_party = 2;
    Match match = 3;
  }
}

message AlertedParty {
  string id = 1;
}

message WatchlistParty {
  string id = 1;
  string type = 2;
}

message Match {
  AlertedParty alerted_party = 1;
  WatchlistParty watchlist_party = 2;
}

message Discriminator {
  string value = 1;
}
