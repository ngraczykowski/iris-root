ext {
  libraries = [:]

  //***********************************
  // Silent Eight
  //***********************************
  s8commonsVersion = "2.0.0"
  s8consulGrpcRegistrationVersion = "1.0.0"
  s8agentsApiVersion = "0.21.0"
  s8dataSourceApiVersion = "0.18.0"
  s8RabbitMqCommonSchemaVersion = "1.11.0-SNAPSHOT"

  // TODO all of this should be specified in agent-dependencies-common (MI6-638)
  aspectjVersion = "1.9.7" //TODO use version from platform (MI6-638)
  byteBuddyVersion = "1.11.1" //TODO use version from platform (MI6-638)
  guavaVersion = "30.1.1-jre" //TODO use version from platform (MI6-638)
  jbossXnioVersion = "3.5.9.Final"
  springBootAutoconfigureVersion = "2.13.0.RELEASE" //TODO it probably should be aligned with the rest of the spring-boot deps ("2.4.6") (MI6-638)
  objenesisVersion = "3.2"
  sentryVersion = "5.6.0"
}

// Silent Eight libraries
libraries.s8_commons_core = "com.silenteight.commons:silenteight-commons-core:$s8commonsVersion"
libraries.consul_grpc_registration = "com.silenteight.commons:consul-grpc-registration:$s8consulGrpcRegistrationVersion"
libraries.s8_agents_api = "com.silenteight.agent.api:agents-api:$s8agentsApiVersion"
libraries.s8_datasource_api = "com.silenteight.sens.date-source-api:data-source-api:$s8dataSourceApiVersion"
libraries.s8_rabbit_mq_common_schema = "com.silenteight.rabbitmqcommonschema:sear-rabbitmq-common-schema-definitions:$s8RabbitMqCommonSchemaVersion"

// Spring
libraries.spring_aop = "org.springframework:spring-aop"
libraries.spring_aspects = "org.springframework:spring-aspects"
libraries.spring_beans = "org.springframework:spring-beans"
libraries.spring_context = "org.springframework:spring-context"
libraries.spring_context_support = "org.springframework:spring-context-support"
libraries.spring_core = "org.springframework:spring-core"
libraries.spring_expression = "org.springframework:spring-expression"
libraries.spring_orm = "org.springframework:spring-orm"
libraries.spring_test = "org.springframework:spring-test"

libraries.spring_boot = "org.springframework.boot:spring-boot"
libraries.spring_boot_autoconfigure = "org.springframework.boot:spring-boot-autoconfigure"
libraries.spring_boot_configuration_processor = "org.springframework.boot:spring-boot-configuration-processor"
libraries.spring_boot_starter_actuator = "org.springframework.boot:spring-boot-starter-actuator"
libraries.spring_boot_starter_logging = "org.springframework.boot:spring-boot-starter-logging"
libraries.spring_boot_starter_undertow = "org.springframework.boot:spring-boot-starter-undertow"
libraries.spring_boot_starter_web = "org.springframework.boot:spring-boot-starter-web"
libraries.spring_boot_starter_aop = "org.springframework.boot:spring-boot-starter-aop"
libraries.spring_boot_test = "org.springframework.boot:spring-boot-test"
libraries.spring_boot_test_autoconfigure = "org.springframework.boot:spring-boot-test-autoconfigure"
libraries.spring_cloud_starter_consul_config = "org.springframework.cloud:spring-cloud-starter-consul-config"
libraries.spring_cloud_starter_sleuth = "org.springframework.cloud:spring-cloud-starter-sleuth"
libraries.spring_data_commons = "org.springframework.data:spring-data-commons"
libraries.spring_cloud_consul_discovery = "org.springframework.cloud:spring-cloud-consul-discovery"

// AMQP
libraries.amqp_client = "com.rabbitmq:amqp-client"
libraries.spring_amqp = "org.springframework.amqp:spring-amqp"
libraries.spring_amqp_rabbit = "org.springframework.amqp:spring-rabbit"
libraries.spring_boot_starter_amqp = "org.springframework.boot:spring-boot-starter-amqp"
libraries.spring_boot_starter_integration = "org.springframework.boot:spring-boot-starter-integration"
libraries.spring_integration_amqp = "org.springframework.integration:spring-integration-amqp"
libraries.spring_integration_core = "org.springframework.integration:spring-integration-core"
libraries.spring_integration_test = "org.springframework.integration:spring-integration-test"
libraries.protobuf_java = "com.google.protobuf:protobuf-java"
libraries.protobuf_java_util = "com.google.protobuf:protobuf-java-util"
libraries.lz4_java = [group: 'org.lz4', name: 'lz4-java']

// Project Reactor
libraries.reactor_core = "io.projectreactor:reactor-core"
libraries.reactor_test = "io.projectreactor:reactor-test"

// APIs
libraries.slf4j_api = "org.slf4j:slf4j-api"

// Others
libraries.aspectjrt = "org.aspectj:aspectjrt:$aspectjVersion"
libraries.aspectjtools = "org.aspectj:aspectjtools:$aspectjVersion"
libraries.brave_instrumentation_grpc = "io.zipkin.brave:brave-instrumentation-grpc"
libraries.byte_buddy = "net.bytebuddy:byte-buddy:$byteBuddyVersion"
libraries.byte_buddy_agent = "net.bytebuddy:byte-buddy-agent:$byteBuddyVersion"
libraries.classgraph = "io.github.classgraph:classgraph"
libraries.commons_io = "commons-io:commons-io"
libraries.commons_lang3 = "org.apache.commons:commons-lang3"
libraries.commons_text = "org.apache.commons:commons-text"
libraries.commons_csv = "org.apache.commons:commons-csv"

// gRPC
libraries.grpc_api = "io.grpc:grpc-api"
libraries.grpc_core = "io.grpc:grpc-core"
libraries.grpc_protobuf = "io.grpc:grpc-protobuf"
libraries.grpc_server_spring_boot_starter = "net.devh:grpc-server-spring-boot-starter"
libraries.grpc_client_spring_boot_starter = "net.devh:grpc-client-spring-boot-starter"
libraries.grpc_client_spring_boot_autoconfigure = "net.devh:grpc-server-spring-boot-autoconfigure:$springBootAutoconfigureVersion" //TODO (MI6-638)
libraries.grpc_stub = "io.grpc:grpc-stub"

// Jackson
libraries.jackson_annotations = "com.fasterxml.jackson.core:jackson-annotations"
libraries.jackson_databind = "com.fasterxml.jackson.core:jackson-databind"
libraries.jackson_dataformat_xml = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"
libraries.jackson_datatype_jdk8 = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
libraries.jackson_datatype_jsr310 = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
libraries.jackson_module_afterburner = "com.fasterxml.jackson.module:jackson-module-afterburner"
libraries.jackson_module_parameter_names = "com.fasterxml.jackson.module:jackson-module-parameter-names"
libraries.jackson_module_paranamer = "com.fasterxml.jackson.module:jackson-module-paranamer"

// Persistence
libraries.hibernate_core = "org.hibernate:hibernate-core"
libraries.hibernate_jpamodelgen = "org.hibernate:hibernate-jpamodelgen"
libraries.hibernate_validator = "org.hibernate.validator:hibernate-validator"
libraries.hibernate_envers = "org.hibernate:hibernate-envers"
libraries.jakarta_persistence_api = "jakarta.persistence:jakarta.persistence-api"
libraries.javax_transaction = "javax.transaction:javax.transaction-api"

libraries.guava = "com.google.guava:guava:$guavaVersion"
libraries.jakarta_validation_api = "jakarta.validation:jakarta.validation-api"
libraries.javax_cache_api = "javax.cache:cache-api"
libraries.jaxb_api = "javax.xml.bind:jaxb-api"
libraries.junit_jupiter_api = "org.junit.jupiter:junit-jupiter-api"
libraries.assertj_core = "org.assertj:assertj-core"

libraries.micrometer_prometheus = "io.micrometer:micrometer-registry-prometheus"
libraries.micrometer_core = "io.micrometer:micrometer-core"
libraries.reactor_grpc_stub = "com.salesforce.servicelibs:reactor-grpc-stub"
libraries.snakeyaml = "org.yaml:snakeyaml"
libraries.tomcat_embed_el = "org.apache.tomcat.embed:tomcat-embed-el"
libraries.univocity_parsers = "com.univocity:univocity-parsers"

// Testing
libraries.groovy_all = "org.codehaus.groovy:groovy-all"
libraries.hamcrest = "org.hamcrest:hamcrest"
libraries.json_path = "com.jayway.jsonpath:json-path"
libraries.objenesis = "org.objenesis:objenesis:$objenesisVersion"
libraries.spock_core = "org.spockframework:spock-core"
libraries.test_containers = "org.testcontainers:testcontainers"
libraries.test_containers_postgresql = "org.testcontainers:postgresql"
libraries.test_containers_spock = "org.testcontainers:spock"
libraries.testcontainers_rabbitmq = "org.testcontainers:rabbitmq"
libraries.testcontainers_junit_jupiter = "org.testcontainers:junit-jupiter"

// Monitoring
libraries.sentry = "io.sentry:sentry"
libraries.sentry_logback = "io.sentry:sentry-logback"
libraries.sentry_spring_boot_starter = "io.sentry:sentry-spring-boot-starter"

configurations.all {
  exclude group: 'org.glassfish', module: 'javax.el'
  exclude group: 'org.glassfish', module: 'jakarta.el'
  exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'

  // Exclude outdated javax APIs from JBoss (newer version are already included)
  exclude group: 'org.jboss.spec.javax.annotation', module: 'jboss-annotations-api_1.2_spec'
  exclude group: 'org.jboss.spec.javax.servlet', module: 'jboss-servlet-api_4.0_spec'
  exclude group: 'org.jboss.spec.javax.transaction', module: 'jboss-transaction-api_1.2_spec'

  resolutionStrategy {
    failOnVersionConflict()
    preferProjectModules()

    //TODO try to remove those force (MI6-638)
    force libraries.byte_buddy
    force libraries.byte_buddy_agent
    force libraries.guava
    force libraries.aspectjrt
    force libraries.aspectjtools

    // Fix for running with JDK11
    force "org.jboss.xnio:xnio-api:$jbossXnioVersion"
    force "org.jboss.xnio:xnio-nio:$jbossXnioVersion"
  }
}

dependencies {
  implementation platform(project(":agent-dependencies-common"))
  annotationProcessor platform(project(":agent-dependencies-common"))

  implementation platform("io.sentry:sentry-bom:$sentryVersion")

  implementation libraries.slf4j_api
}
