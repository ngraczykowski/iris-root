@startuml
header Maker flow

actor Maker order 10

box "WebApp Frontend"
    participant Frontend as "Change Request UI" order 20
end box

box "WebApp Backend"
    participant Backend as "WebApp" order 30
    database WebAppDB as "WebApp Database" order 40
end box

box "SERP"
    participant Governance order 50
end box

database RBScorerReport as "RB Scorer Report" order 60

Backend -> WebAppDB: Create dummy workflow
note over Backend, WebAppDB
    Workflow simulates a process with
    multiple approval levels that maybe
    will be introduced in future
end note

Maker <-> RBScorerReport : Copy desired RB ids OR feature vector signatures
Maker -> Frontend : Input DT id
Maker -> Frontend : Input RB ids OR feature vector signatures

loop until at least one of: AI Solution, Status change and comment provided
   Maker -> Frontend : Input RB Solution OR Status change
   Maker -> Frontend : Input Change Request comment
end

Maker -> Frontend: Click "Submit change request" button

Frontend -> Backend: Create Change Request
note over Frontend, Backend
    * Decision Tree id
    * Reasoning Branches ids OR feature vector signatures
    * AI solution (possible "no change")
    * Status (possible "no change")
    * Comment
end note

activate Backend
activate Backend #AliceBlue

Backend -> Governance : Fetch Decision Tree for a given id

activate Governance
activate Governance #DarkSalmon

alt Decision Tree exists

    Governance -->> Backend: Decision Tree result
    deactivate Governance

    Backend -> WebAppDB : Persist new Change Request
    note over Backend, WebAppDB
        * Decision Tree id
        * list of RB ids or feature vector signatures
        * maker username
        * maker comment
        * number of affected RBs
        * creation at timestamp
        * current approval level
        * workflow (dummy workflow)
    end note

    Backend ->> Backend : Publish event to calculate affected RBs
    note over Backend, WebAppDB
        Asynchronous background process that will update
        number of affected RBS for a given Change Request
    end note

    Backend -->> Frontend: Change Request successfully \ncreated result
    deactivate Backend

    Frontend -->> Maker : Inform about success

else Decision Tree doesn't exist
    Governance -->> Backend : Decision Tree doesn't exist
    deactivate Governance

    Backend -->> Frontend: Decision Tree id validation \nfailure result
    deactivate Backend

    Frontend -->> Maker : Inform about failure
end

@enduml
