@startuml
header Approver flow

actor Approver
box "WebApp Frontend"
    participant Frontend as "Approver Queue GUI"
end box

box "WebApp Backend"
    participant Backend as "WebApp"
    database WebAppDB as "WebApp Database"
end box

box "SERP"
    participant Reporter
    participant Governance
end box

Frontend ->> Backend : Fetch approver queue

activate Backend
Backend <-> WebAppDB : Fetch pending Change Requests
note over Backend, WebAppDB
    Not declined and with missing approval levels
end note

Backend -->> Frontend : Change Requests list
deactivate Backend

Frontend -->> Approver : Present list of Change Requests \nwaiting for approval


==  Approve Change Request  ==

Approver -> Frontend : Click "Approve"
Frontend ->> Backend : Change Request approve request

activate Backend
Backend <-> WebAppDB : Fetch Change Request current approval level

Backend <-> WebAppDB : Fetch Change Request workflow approval level

Backend -> Backend : Verify is Change Request can be applied
note over Backend
    Change Request current approve level + 1
    is equal to workflow approval level
end note

alt Change Request can be applied
    Backend <-> WebAppDB : Fetch Change Request RB ids and \nfeature vector signatures

    Backend -> Governance: Apply changes
    activate Governance

    alt RB changes applied with success
        Governance --[#green]> Backend : Changes in RBs applied successfully
        deactivate Governance

        Backend -> WebAppDB : Save new approval

        Backend -> WebAppDB: Modify Change Request status to approved

        Backend ->> Backend: Publish 'Change request approved' event
        note over Backend, WebAppDB
            Asynchronous background process that will
            log event data into an application logs
        end note

        Backend -->> Frontend : Approval success result

        Frontend -->> Approver : Inform about success

    else RB changes cannot be applied
        Governance --[#red]> Backend : Changes in RBs failed

        Backend -->> Frontend : Approval failed result

        Frontend -->> Approver : Inform about failure
    end

else Change Request cannot be applied
    Backend -> WebAppDB : Save new approval
    Backend -> WebAppDB: Increase Change Request current approval level

    Backend ->> Backend: Publish 'Change request approved' event
    note over Backend, WebAppDB
        Asynchronous background process that will
        log event data into an application logs
    end note

    Backend -->> Frontend : Approval success result
    deactivate Backend

    Frontend -->> Approver : Inform about success
end

==  Reject Change Request  ==

Approver -> Frontend : Click "Reject"
Frontend ->> Backend : Change Request reject request

activate Backend
Backend -> WebAppDB : Save new rejection
Backend -> WebAppDB : Modify Change Request status to declined

Backend ->> Backend: Publish 'Change request rejected' event
note over Backend, WebAppDB
    Asynchronous background process that will
    log event data into an application logs
end note

Backend -->> Frontend : Rejection success result
deactivate Backend

Frontend -->> Approver : Inform about success

@enduml
