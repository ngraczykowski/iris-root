sens.webapp.cas.saml.keystore.path=${sens.home}/conf/certs/saml-keystore.jks
sens.webapp.cas.saml.auto.redirect=true
sens.webapp.cas.saml.name=SAML2
sens.webapp.cas.saml.principal.attribute=
sens.webapp.cas.saml.name.id=

# Skip CAS login page if enabled
cas.authn.pac4j.saml[0].autoRedirect=${sens.webapp.cas.saml.auto.redirect}

# Entity ID assigned to CAS acting as SP (Service Provider)
cas.authn.pac4j.saml[0].serviceProviderEntityId=${sens.webapp.cas.saml.service.provider.entity.id}

# Path to the auto-generated CAS SP metadatasaml-sp-metadata.xml
# This file will be populated with SP metadata by CAS if not exists already
# File is generated during first login attempt
cas.authn.pac4j.saml[0].serviceProviderMetadataPath=file:${sens.webapp.cas.config.dir}/saml-sp-metadata.xml

# Path or URL to delegated IdP (Identity Provider) metadata
cas.authn.pac4j.saml[0].identityProviderMetadataPath=${sens.webapp.cas.saml.identity.provider.metadata.path}

# SAML Keystore password which is used to protect keystore and private key
# Key pair stored in this keystore is generated during CAS startup if it not exists already
# Key pair is used for encryption and signing in SAML communication
cas.authn.pac4j.saml[0].keystorePassword=${sens.webapp.cas.saml.keystore.password}
cas.authn.pac4j.saml[0].privateKeyPassword=${sens.webapp.cas.saml.keystore.password}
cas.authn.pac4j.saml[0].keystorePath=file:${sens.webapp.cas.saml.keystore.path}

# Friendly name shown in UI and used by CAS to identify authentication provider
cas.authn.pac4j.saml[0].clientName=${sens.webapp.cas.saml.name}

# Name of attribute which contains username of the user
cas.authn.pac4j.saml[0].principalAttributeId=${sens.webapp.cas.saml.principal.attribute}

# NameIDFormat which is used in SP metadata
cas.authn.pac4j.saml[0].nameIdPolicyFormat=${sens.webapp.cas.saml.name.id}
