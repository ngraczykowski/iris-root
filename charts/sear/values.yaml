# String to partially override spring.fullname template (will maintain the release name)
nameOverride: ""
# String to fully override spring.fullname template
fullnameOverride: ""

#
# Common for all components
#
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

#
# PostgreSQL database
#
database:
  enabled: true

  volume:
    size: 50Gi

  numberOfInstances: 1

  postgresql:
    version: "12"

#
# RabbitMQ
#
rabbitmq:
  enabled: true

  replicas: 1
  persistence: {}
  # storageClassName: gp3
  # storage: 10Gi

  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  annotations: {}
  tolerations: []
  affinity: {}

#
# Common Ingress configuration
#
ingress:
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx-internal
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

#
# Configuration common for all components
#
common:
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []

  replicaCount: 1

  command: []

  args: []
  # - --spring.profiles.active=dev

  configFiles: {}
  # application.yml: |
  #   logging:
  #     level:
  #       com.silenteight: DEBUG

  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  service:
    # Determines how the Service is exposed. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
    type: ClusterIP
    http:
      port: 8080
    grpc:
      enabled: true
      port: 9090

  containerPorts:
    http:
      port: 8080
    management:
      port: 8081
    grpc:
      enabled: true
      port: 9090

  startupProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 6

  livenessProbe:
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

  readinessProbe:
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  ingress:
    enabled: true

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}
  tolerations: []
  affinity: {}

agentsCommon:
  useDb: false
  startupProbe:
    initialDelaySeconds: 60
  image:
    tag: "latest"
  ingress:
    enabled: false

#
# Declare and customize components
#
# Each component can have the following parameters customized:
#
#   dbName  - (String) name of the database. Defaults to the component name.
#   webPath - (String) URL path of this component. Defaults to the component name.
#
# You can also overwrite the `common` configuration, by configuring the following values:
#
#   replicaCount: 1
#   args: []
#   configFiles: {}
#   resources: {}
#   service: {}
#   containerPorts: {}
#   startupProbe: {}
#   livenessProbe: {}
#   readinessProbe: {}
#   ingress: {}
#   autoscaling: {}
#   nodeSelector: {}
#   tolerations: []
#   affinity: {}
#
components:
  payments-bridge:
    enabled: false

    image:
      repository: registry.dev.s8ops.com/pb/sear-payments-bridge-app
      tag: "latest"

    dbName: "pb"
    webPath: "pb"

  universal-data-source:
    image:
      repository: registry.dev.s8ops.com/uds/universal-data-source-app
      tag: "latest"

    dbName: "uds"
    webPath: "uds"

  adjudication-engine:
    image:
      repository: registry.dev.s8ops.com/ae/adjudication-engine-app
      tag: "latest"

    dbName: "ae"
    webPath: "ae"

  governance:
    image:
      repository: registry.dev.s8ops.com/iris/governance-app
      tag: "latest"

    dbName: "gov"

  simulator:
    image:
      repository: registry.dev.s8ops.com/iris/simulator-app
      tag: "latest"

    dbName: "sim"

  webapp:
    image:
      repository: registry.dev.s8ops.com/iris/webapp-app
      tag: "latest"

  warehouse:
    image:
      repository: registry.dev.s8ops.com/warehouse/warehouse-app
      tag: "latest"

    dbName: "wh"

    startupProbe:
      initialDelaySeconds: 60

  # FIXME(pputerla) - remark - we're missing list of supported component keys
  agents:
    name-agent:
      image:
        repository: registry.dev.s8ops.com/linguistics-agent
    date-agent:
      image:
        repository: registry.dev.s8ops.com/date-agent
    document-comparer-agent:
      command:
        - "/docker-entrypoint.sh"
        - "comparer"
      image:
        repository: registry.dev.s8ops.com/document-agent
    document-recognizer-agent:
      command:
        - "/docker-entrypoint.sh"
        - "recognizer"
      image:
        repository: registry.dev.s8ops.com/document-agent
    document-number-agent:
      command:
        - "/docker-entrypoint.sh"
        - "number"
      image:
        repository: registry.dev.s8ops.com/document-agent
    geo-agent:
      image:
        repository: registry.dev.s8ops.com/geo-agent
    freetext-agent:
      image:
        repository: registry.dev.s8ops.com/freetext-agent
    gender-agent:
      image:
        repository: registry.dev.s8ops.com/gender-agent
#
# Frontend Web Application
#
frontend:
  replicaCount: 1

  image:
    repository: registry.dev.s8ops.com/sep-front-app
    tag: "latest"
    pullPolicy: IfNotPresent
    pullSecrets: []

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}
  tolerations: []
  affinity: {}

#
# KeyCloak
#
# Configuration of all the values below is required.
#
keycloak:
  authServerUrl: ""
  realm: ""
  frontendClientId: ""
  jwtIssuerUri: "{{ .Values.keycloak.authServerUrl }}/auth/realms/{{ .Values.keycloak.realm }}"
