mailhog:
  resources:
    limits:
      memory: 128Mi
    requests:
      memory: 64Mi

common:
  image:
    pullPolicy: Always

  properties:
    "serp.show-env": true

  resources:
    limits:
      cpu: 2000m
      memory: 1Gi
    requests:
      cpu: 750m
      memory: 1Gi

agentsCommon:
  profiles:
    - rabbitmq-declare

components:
  adjudication-engine:
    profiles:
      - rabbitdeclare

  governance:
    profiles:
      - linux
      - governance
      - database
      - rabbitmq
      - messaging

  simulator:
    profiles:
      - linux
      - simulator
      - messaging

  webapp:
    profiles:

  warehouse:
    profiles:
      - linux
      - warehouse
      - messaging
    properties:
      # FIXME(ahaczewski): Required to repeat configuration from `keycloak` below due to overwriting
      #  environment variable defined directly in the WebApp container image.
      "keycloak.frontend-client-id": dev-frontend

    configFiles:
      application.yml: |
        warehouse:
          report:
            default-bucket: todo-add-bucket

        sep:
          filestorage:
            minio:
              privateKey: dummy
              accessKey: dummy
              url: https://todo-add-bucket.s3.eu-central-1.amazonaws.com
              region: eu-central-1


agents:
  name-agent:
    properties:
      "linguistics.name.facade.enabled": true
    resources:
      limits:
        memory: 2Gi
      requests:
        memory: 1Gi
  date-agent:
    properties:
      "dob.agent.facade.enabled": true
  document-comparer-agent:
    properties:
      "nationalId.agent.facade.enabled": true
  document-recognizer-agent:
    properties:
  document-number-agent:
    properties:
      "document.agent.facade.enabled": true
  geo-agent:
    properties:
      "geosanctions.agent.facade.enabled": true
      "geo.agent.facade.enabled": true
    resources:
      limits:
        memory: 2Gi
      requests:
        memory: 1Gi
  learning-engine:
    properties:
  is-pep-agent:
    properties:
      "ispep.agent.facade.enabled": true
    resources:
      limits:
        memory: 2Gi
      requests:
        memory: 1Gi
  historical-decisions-agent:
    properties:
      "historicaldecisions.agent.facade.enabled": true
      "contextuallearning.agent.facade.enabled": true
  allow-list-agent:
    properties:
      "allowlist.agent.facade.enabled": true
    resources:
      limits:
        memory: 2Gi
      requests:
        memory: 1Gi
  country-agent:
    properties:
      "country.agent.facade.enabled": true
  freetext-agent:
    properties:
      "freetext.agent.facade.enabled": true
  gender-agent:
    properties:
      "gender.agent.facade.enabled": true

frontend:
  resources:
    limits:
      memory: 256Mi
    requests:
      memory: 128Mi

keycloak:
  # working values for now:
  authServerUrl: https://auth.silenteight.com
  realm: sens-webapp
  frontendClientId: dev-frontend
  jwtIssuerUri: "{{ .Values.keycloak.authServerUrl }}/realms/{{ .Values.keycloak.realm }}"
  resource: "dev-backend"
  #TODO(dsniezek):credentials.secret should be stored in a safe manner or injected via operator
  credentials:
    secret: "e27cbeeb-b8dc-4d84-a7dc-7c2065d8b01f"
  # new stuff to be tested
  # realm name is implied and equal to namespace name
  #authServerUrl: https://auth.dev.s8ops.com
  #jwtIssuerUri: "{{ .Values.keycloak.authServerUrl }}/realms/{{ .Release.Namespace }}"

  # for examples, check existing files; format documentation:
  # > kubectl explain keycloakuser.spec.user
  # > kubectl explain keycloakclient.spec.client
  #realmData:
  #  users:
  #  clients:
