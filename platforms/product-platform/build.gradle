plugins {
  id('java-platform')
}

group = 'com.silenteight.iris.platform'

javaPlatform.allowDependencies()

dependencies {
  // NOTE(ahaczewski): Keep this order!
  api(platform(libs.platform.reactor))
  api(platform(libs.platform.sep))
  api(platform(libs.platform.spring.boot))
  api(platform(libs.platform.spring.cloud))
  api(platform(libs.platform.sentry))
  api(platform(libs.platform.awssdk))
  api(platform(libs.platform.keycloak.adapter))

  constraints {
    //api('org.apache.juneau:juneau-marshall:8.2.0')

    // Silent Eight
    api(libs.adjudication.engine.api)
    api(libs.agents.api)
    api(libs.consul.grpc.registration)
    api(libs.data.retention.api)
    api(libs.data.source.agentinput.api)
    api(libs.data.source.api)
    api(libs.data.source.categories.api)
    api(libs.data.source.comments.api)
    api(libs.governance.api)
    api(libs.governance.model.api)
    api(libs.governance.solving.api)
    api(libs.learning.engine.store.api)
    api(libs.sear.rabbitmq.common.schema)
    api(libs.silenteight.agents.protocol)
    api(libs.silenteight.commons.app)
    api(libs.silenteight.commons.core)
    api(libs.silenteight.sep.base.aspects)
    api(libs.silenteight.sep.base.common)
    api(libs.silenteight.sep.base.testing)
    api(libs.warehouse.data.api)

    // Other
    api(libs.aspectjrt)
    api(libs.aspectjtools)
    api(libs.grpc.api)
    api(libs.grpc.auth)
    api(libs.grpc.census)
    api(libs.grpc.client.spring.boot.starter)
    api(libs.grpc.context)
    api(libs.grpc.core)
    api(libs.grpc.netty)
    api(libs.grpc.protobuf)
    api(libs.grpc.server.spring.boot.starter)
    api(libs.grpc.services)
    api(libs.grpc.spring.boot.starter)
    api(libs.grpc.stub)
    api(libs.grpc.testing)
    api(libs.hibernate.types)
    api(libs.jackson.annotations)
    api(libs.jackson.databind)
    api(libs.jackson.dataformat.csv)
    api(libs.jackson.dataformat.xml)
    api(libs.javax.mail)
    api(libs.liquibase.core)
    api(libs.liquibase.sessionlock)
    api(libs.logstash.logback.encoder)
    api(libs.opencsv)
    api(libs.pebble)
    api(libs.protobuf.java)
    api(libs.protobuf.java.util)
    api(libs.pw.swift.core)
    api(libs.tika.core)
  }
}
