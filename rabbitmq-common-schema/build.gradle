plugins {
  id "maven-publish"
  id "idea"
  id "org.sonarqube" version "2.8"
  id "com.silenteight.gradle.convention" version "1.20.0"
  id "com.silenteight.gradle.release" version "1.4.0"
  id "com.silenteight.gradle.wrapper" version "1.1.0"
  id "com.google.cloud.tools.jib" version "3.1.4" apply false
}

projectSetup {
  javaVersion = JavaVersion.VERSION_11
}

subprojects {Project subproject ->
  pluginManager.withPlugin("java") {
    subproject.pluginManager.apply "maven-publish"

    subproject.tasks.withType(JavaCompile).configureEach {JavaCompile java ->
      java.options.fork = true
      java.options.compilerArgs << "-parameters"
    }

    subproject.afterEvaluate {
      if (!subproject.pluginManager.hasPlugin("java-library"))
        generateClassPathInManifest(subproject)

      subproject.jar {
        preserveFileTimestamps false
        reproducibleFileOrder true
      }
    }
  }
}

static def generateClassPathInManifest(Project project) {
  // Generates Class-Path in .jar manifest
  project.tasks.named(JavaPlugin.JAR_TASK_NAME).configure {Jar jar ->
    jar.doFirst {
      jar.manifest {
        def runtimeClasspath = project.configurations.runtimeClasspath

        if (!runtimeClasspath.isEmpty()) {
          def classPathJars = runtimeClasspath.collect {it.getName()}.join(" ")

          attributes "Class-Path": classPathJars
        }
      }
    }
  }
}
