uds:
  #-------------------------------------------------------------------------------------------------
  # SECURITY
  #
  # The security is disabled by default for local development.
  # Please see the README.md for information on how to enable it.
  #-------------------------------------------------------------------------------------------------
  security:
    disable-security: true

  #---------------------------------------------------------------------------------------------------
  # MESSAGING CONCURRENCY
  #---------------------------------------------------------------------------------------------------

  messaging:
    concurrency: 4
    prefetch: 25

  #------------------------------------------------------------------------------
  # Features mapping
  #------------------------------------------------------------------------------
  features:
    mapping:
      geo2: geo
      organizationName2: organizationName

#------------------------------------------------------------------------------
# Ingress authorization
#------------------------------------------------------------------------------
keycloak:
  realm: sierra
  auth-server-url: https://auth.silent8.cloud
  ssl-required: external
  resource: sierra-dev-api
  use-resource-role-mappings: true
  bearer-only: true

#---------------------------------------------------------------------------------------------------
# SERVER
#---------------------------------------------------------------------------------------------------

# Embedded server configuration
server:
  forward-headers-strategy: native
  undertow:
    threads:
      io: ${uds.web.threads.io:4}
      worker: ${uds.web.threads.worker:16}

  error:
    include-exception: true
    include-stacktrace: never

  servlet:
    context-path: /rest/uds

#---------------------------------------------------------------------------------------------------
# MANAGEMENT
#---------------------------------------------------------------------------------------------------

# Management HTTP server
management:
  health:
    rabbit:
      enabled: false

  endpoint:
    health:
      show-details: when_authorized
      roles: ENDPOINT_ADMIN
      cache:
        time-to-live: 1000ms

  endpoints:
    web:
      base-path: /management
      exposure:
        include: [ "health", "info", "liquibase", "metrics", "prometheus", "loggers" ]
    loggers:
      sensitive: false

  metrics:
    tags:
      application: /rest/${spring.application.name}
  auditevents:
    enabled:

spring:
  #-------------------------------------------------------------------------------------------------
  # GENERAL
  #-------------------------------------------------------------------------------------------------
  application:
    name: uds

  aop:
    auto: false

  task:
    execution:
      pool:
        core-size: 8
        keep-alive: 10s
        max-size: 16
        queue-capacity: 10000
      thread-name-prefix: pool-task-

    scheduling:
      pool:
        size: 4
      thread-name-prefix: pool-scheduling-

  main:
    banner-mode: 'off'

  #-------------------------------------------------------------------------------------------------
  # CONSUL SERVICE DISCOVERY
  #-------------------------------------------------------------------------------------------------
  cloud:
    consul:
      config:
        enabled: false
      enabled: false

  #-------------------------------------------------------------------------------------------------
  # DATABASE
  #-------------------------------------------------------------------------------------------------
  datasource:
    # Postgres database
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://${uds.db.host}:${uds.db.port}/${uds.db.name}?currentSchema=${uds.db.schema:public}
    username: ${uds.db.username}
    password: ${uds.db.password}
    initialization-mode: never

    # Hikari pool configuration
    hikari:
      pool-name: Database-Pool
      minimum-idle: ${uds.db.connections.min:1}
      maximum-pool-size: ${uds.db.connections.max:10}
      auto-commit: false
      schema: ${uds.db.schema:public}
      isolate-internal-queries: true
      # NOTE(ahaczewski): Forces HikariCP to commit the transaction after opening fresh connection.
      #  Without it, the connection transaction is left in OPEN state instead of IDLE, because
      #  just before HikariCP runs `SET SESSION spb.h_path TO '${uds.db.schema}'` which begins
      #  transaction. Thus, with that query as workaround, we force the transaction commit.
      connection-init-sql: SELECT 1
      data-source-properties:
        ApplicationName: Universal Data Source
        reWriteBatchedInserts: true

  # Database migrations
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: ${uds.db.schema:public}
    contexts: default

  # Spring Data JPA
  jpa:
    database: POSTGRESQL
    show-sql: false
    open-in-view: false
    database-platform: com.silenteight.sep.base.common.support.hibernate.FixedPostgreSql95Dialect

    hibernate:
      ddl-auto: none
      use-new-id-generator-mappings: true

    properties:
      hibernate.cache.use_query_cache: false
      hibernate.connection.handling_mode: DELAYED_ACQUISITION_AND_HOLD
      hibernate.connection.provider_disables_autocommit: true
      hibernate.generate_statistics: false
      hibernate.id.optimizer.pooled.preferred: pooled-lo
      hibernate.jdbc.batch_size: 2048
      hibernate.jdbc.lob.non_contextual_creation: true
      hibernate.jdbc.use_get_generated_keys: true
      hibernate.jdbc.time_zone: UTC
      hibernate.temp.use_jdbc_metadata_defaults: false
      hibernate.order_inserts: true
      hibernate.order_updates: true
      #org.hibernate.flushMode: COMMIT
      org.hibernate.envers.audit_table_suffix: _audit
      org.hibernate.envers.store_data_at_delete: true

  jackson:
    default-property-inclusion: NON_NULL

  #-------------------------------------------------------------------------------------------------
  # RABBITMQ
  #-------------------------------------------------------------------------------------------------
  rabbitmq:
    listener:
      type: simple
      direct:
        consumers-per-queue: ${uds.messaging.concurrency:4}
        prefetch: ${uds.messaging.prefetch:25}
        retry:
          enabled: true
          multiplier: 2
      simple:
        concurrency: 1
        max-concurrency: ${uds.messaging.concurrency:4}
        prefetch: ${uds.messaging.prefetch:25}
        retry:
          enabled: true
          multiplier: 2
          max-attempts: 5
          initial-interval: 500
          max-interval: 4000

info:
  env: ${spb.env:local}

grpc:
  server:
    max-inbound-message-size: 8MB
  client:
    GLOBAL:
      negotiation-type: PLAINTEXT
      max-inbound-message-size: 8MB
